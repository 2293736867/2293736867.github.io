<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2021-02-12T12:19:18.299Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>我配不上你，
纵然很努力。</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[Chrome扩展开发基础教程（附HelloWorld）]]></title>
        <id>https://2293736867.github.io/post/chrome-kuo-zhan-kai-fa-ji-chu-jiao-cheng-fu-helloworld/</id>
        <link href="https://2293736867.github.io/post/chrome-kuo-zhan-kai-fa-ji-chu-jiao-cheng-fu-helloworld/">
        </link>
        <updated>2021-02-12T12:15:20.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-概述">1 概述</h1>
<p><code>Chrome</code>扩展开发的基础教程，代码基于原生<code>JS+H5</code>，教程内容基于谷歌扩展开发<a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/">官方文档</a>。</p>
<h1 id="2-环境">2 环境</h1>
<ul>
<li><code>Chrome 88.0.4324.96</code></li>
<li><code>Chromium 87.0.4280.141</code></li>
<li><code>Brave 1.19.84</code></li>
<li><code>FireFox 85.0</code></li>
<li><code>WebStorm 2020.3.2</code></li>
<li><code>Manifest V3</code></li>
</ul>
<h1 id="3-开发环境准备">3 开发环境准备</h1>
<p>开发扩展建议使用<code>WebStorm</code>，推荐<code>WebStorm</code>的原因是能够补全，在设置中的<code>Libraries</code>中可以下载<code>chrome</code>的库，这样就能够补全了：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210211204114366.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210212015801882.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>另一个建议使用的是<code>VSCode</code>，但是笔者目前没有找到让<code>VSCode</code>补全的方式，希望知道的可以在评论指出补充一下。</p>
<p>当然其实扩展开发并没有规定使用哪一个<code>IDE</code>，常用的<code>Web</code>开发<code>IDE</code>比如<code>HBuilder</code>也是可以的，看个人喜好了。</p>
<h1 id="4-创建manifestjson">4 创建<code>manifest.json</code></h1>
<p>首先创建一个空白文件夹：</p>
<pre><code class="language-bash">mkdir FirstExtension
cd FirstExtension
</code></pre>
<p>接着创建一个叫<code>manifest.json</code>的文件，直接在<code>WebStorm</code>中创建即可，文件内容如下：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;First Extension&quot;,
    &quot;description&quot;: &quot;This is my first extension&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3
}
</code></pre>
<p>打开浏览器进入管理扩展程序，并开启开发者模式，选择<code>Load unpacked</code>，打开刚才创建的<code>FirstExtension</code>文件夹：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210212021125773.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样就可以看到扩展了。</p>
<p>事实上最简单的扩展只需要一个<code>manifest.json</code>，来描述扩展最基本的一些属性以及行为，因此这样就算完成HelloWorld了。</p>
<h1 id="5-添加弹出界面">5 添加弹出界面</h1>
<p>现在扩展什么界面也没有，现在可以尝试着给扩展添加一个点击就弹出的界面，首先修改<code>manifest.json</code>，添加<code>action</code>：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;First Extension&quot;,
    &quot;description&quot;: &quot;This is my first extension&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3,
    &quot;action&quot;: {
        &quot;default_popup&quot;: &quot;popup.html&quot;
    }
}
</code></pre>
<p>在与<code>manifest.json</code>同级目录下创建<code>popup.html</code>文件：</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Hello World!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>这样点击扩展就会弹出对应文字了：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210212145215388.gif" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-添加图标">6 添加图标</h1>
<p>在<code>manifest.json</code>中添加<code>icons</code>字段：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;First Extension&quot;,
    &quot;description&quot;: &quot;This is my first extension&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3,
    &quot;action&quot;: {
        &quot;default_popup&quot;: &quot;popup.html&quot;
    },
    &quot;icons&quot;: {
        &quot;16&quot;: &quot;icons/16.png&quot;,
        &quot;32&quot;: &quot;icons/32.png&quot;,
        &quot;48&quot;: &quot;icons/48.png&quot;,
        &quot;128&quot;: &quot;icons/128.png&quot;
    }
}
</code></pre>
<p>图标文件可以从文末的源码处获取，重新加载后就可以看到扩展的图标改变了。</p>
<p>图标一共有四个，<code>16*16</code>是扩展页面中显示的图标：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210212145824197.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>而<code>32*32</code>是可选的，为了防止从<code>48*48</code>的大小中缩小造成失真，<code>48*48</code>是在扩展管理页面中显示的，例如：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210212145602728.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>而<code>128*128</code>是<code>Chrome Web Store</code>中显示的。</p>
<h1 id="7-发布">7 发布</h1>
<p>最后一步是发布，扩展有两种安装方式，一种是通过本地安装，一种是通过<code>Chrome Web Store</code>安装，使用后一种方式的话，需要注册成为<code>Chrome</code>网上应用开发者：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/2021021215045827.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这里为了方便就本地打包发布了，在插件管理页面选择<code>Pack extension</code>：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20210212150700581.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>选择包含了<code>manifest.json</code>的文件夹，在这里就是刚才创建的<code>FirstExtension</code>：</p>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/2021021215080146.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>点击打包后，会出现两个文件：</p>
<figure data-type="image" tabindex="10"><img src="https://img-blog.csdnimg.cn/20210212150957128.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>一个是<code>crx</code>，就是扩展的打包文件，一个是<code>pem</code>，创建新版本的扩展时需要使用。</p>
<p>浏览器中拖拽<code>crx</code>文件就可以安装了，一般来说<code>Chrome/Chromium/Brave</code>因为基于相同内核应该都不会出现问题，至于<code>FireFox</code>，可以参考一下文末的附录。</p>
<h1 id="8-源码">8 源码</h1>
<ul>
<li><a href="https://github.com/2293736867/FirstExtension">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/FirstExtension">码云</a></li>
<li><a href="https://codechina.csdn.net/qq_27525611/FirstExtension">CODECHINA</a></li>
</ul>
<h1 id="9-附录firefox">9 附录：<code>FireFox</code></h1>
<p><code>FireFox</code>目前最新版本（<code>85.0</code>）的扩展目前不支持<code>Manifest V3</code>，因此如果需要开发<code>FireFox</code>扩展，需要使用<code>Manifest V2</code>版本，也就是：</p>
<pre><code class="language-json">&quot;manifest_version&quot;: 2
</code></pre>
<p>当然还有一些字段上的区别，具体可以参考<a href="https://developer.chrome.com/docs/extensions/mv3/intro/mv3-migration/">这里</a>的文档。</p>
<p>另外笔者测试了一下<code>FireFox</code>安装这个<code>Demo</code>扩展好像不能直接拖拽<code>crx</code>文件，需要打开一个叫<code>about:debugging</code>的链接，在设置中选择<code>Load Temporary Add-on</code>:</p>
<figure data-type="image" tabindex="11"><img src="https://img-blog.csdnimg.cn/20210212200931560.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>选择<code>manifest.json</code>文件即可安装。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第242期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-242-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-242-qi/">
        </link>
        <updated>2021-02-11T02:35:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>其实人生，在某个节点后就结束了，大家只是在等彩蛋。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>美人兮美人，不知为暮雨兮为朝云。<br>
——卢仝《有所思》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>超过一定的年龄之后，所谓人生，无非就是一个不断丧失的过程而已。</p>
</blockquote>
<h1 id="音乐推荐">音乐推荐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1808492017">艾辰——《错位时空》</a></p>
</blockquote>
<blockquote>
<p>填不满<br>
半排观众的电影<br>
直到<br>
散场时突然亮起灯<br>
字幕定格在某某出品和发行<br>
我目送<br>
他们行色匆匆</p>
</blockquote>
<blockquote>
<p>像个<br>
自不量力的复读生<br>
完不成<br>
金榜题名的使命<br>
命不是猜剪刀石头布的决定<br>
那么任性</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
那我们算不算<br>
相拥<br>
可如梦初醒般的两手空空<br>
心也空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
是否看过同样<br>
风景<br>
像扰乱时差留在错位时空<br>
终是空<br>
是空</p>
</blockquote>
<blockquote>
<p>数不完<br>
见证许愿的繁星<br>
没灵验<br>
谁来安慰坏心情<br>
十字路口闪烁不停的信号灯<br>
有个人<br>
显然心事重重</p>
</blockquote>
<blockquote>
<p>三个字<br>
只能说给自己听<br>
仰着头<br>
不要让眼泪是空<br>
哪里有可以峰回路转的宿命<br>
我<br>
不想听</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
那我们算不算相拥<br>
可如梦初醒般的两手空空<br>
心也空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
是否看过同样<br>
风景<br>
像扰乱时差留在错位时空<br>
终是空<br>
是空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
空气里弥漫着<br>
心痛<br>
可我们最后在这错位时空<br>
终成空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
空气里弥漫着心痛<br>
可我们最后在这错位时空<br>
终成空<br>
成空</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第241期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-241-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-241-qi/">
        </link>
        <updated>2021-02-10T02:33:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>我丑，是为了降低画质提高性能，为什么我的人生还那么卡呢？</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>迟日催花，淡云阁雨，轻寒轻暖。<br>
——陈亮《水龙吟·春恨》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>就算风吹散了冰雪，想念也会留存下来。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第240期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-240-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-240-qi/">
        </link>
        <updated>2021-02-09T02:31:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>穷不可怕，可怕的是，最穷的人是我。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>溪云初起日沉阁，山雨欲来风满楼。<br>
——许浑《咸阳城东楼/咸阳城西楼晚眺》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>快乐，至少比富裕要好。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第239期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-239-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-239-qi/">
        </link>
        <updated>2021-02-08T02:28:23.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>让刻苦成为习惯，用汗水浇灌未来，然后脱水而死。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>风老莺雏，雨肥梅子，午阴嘉树清圆。<br>
——周邦彦《满庭芳·夏日溧水无想山作》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>最后一次听你的，尝试着不去想你。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第238期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-238-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-238-qi/">
        </link>
        <updated>2021-02-06T19:05:15.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>现在流的泪，都是当初脑子进的水。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>五月畲田收火米，三更津吏报潮鸡。<br>
——李德裕《谪岭南道中作》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>放弃也是需要勇气的。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第237期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-237-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-237-qi/">
        </link>
        <updated>2021-02-05T19:02:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>生活会让你苦上一阵子，等你适应以后，再让你苦上一辈子。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>飞絮飞花何处是，层冰积雪摧残，疏疏一树五更寒。<br>
——纳兰性德《临江仙·寒柳》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>人总是害怕死亡，却殊不知有出生之时必有死亡之日。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第236期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-236-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-236-qi/">
        </link>
        <updated>2021-02-04T18:58:13.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>没有什么可以将你大白，因为你从未成功过。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>朔风吹散三更雪，倩魂犹恋桃花月。<br>
——纳兰性德《菩萨蛮·朔风吹散三更雪》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>奇迹，只不过是努力的另一个名字罢了。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python多环境管理——pyenv]]></title>
        <id>https://2293736867.github.io/post/python-duo-huan-jing-guan-li-pyenv/</id>
        <link href="https://2293736867.github.io/post/python-duo-huan-jing-guan-li-pyenv/">
        </link>
        <updated>2021-02-04T13:01:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-背景概述">1 背景&amp;概述</h1>
<p>因某些需求，需要安装<code>TensorFlow</code>，很自然地在终端敲下了以下命令：</p>
<pre><code class="language-bash">pip install tensorflow
</code></pre>
<p>然后。。。</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210204170856776.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><s>好家伙？？？</s></p>
<p>居然没有？？</p>
<p>因为是<code>Python 3.9</code>，去<code>pypi</code>搜索了，居然还真没有支持的，最高只有<code>Python 3.8</code>：</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210204170823200.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>于是便考虑一个多版本的<code>Python</code>环境，碰巧就在<code>Github</code>上看到了一个<a href="https://github.com/pyenv/pyenv">22.3k</a>的东西：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210204171125437.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这就是<code>pyenv</code>，一个简单的<code>Python</code>版本管理器，可以轻松地在各个<code>Python</code>版本之间进行切换。</p>
<p>好了废话不说，进入正题。</p>
<h1 id="2-安装">2 安装</h1>
<p>安装有两种方式：</p>
<ul>
<li>自动安装</li>
<li>手动安装</li>
</ul>
<h2 id="21-自动安装">2.1 自动安装</h2>
<pre><code class="language-bash">curl https://pyenv.run | bash
# 或
curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
</code></pre>
<h2 id="22-手动安装">2.2 手动安装</h2>
<p>手动安装大致分为三步：</p>
<ul>
<li>安装<code>pyenv</code></li>
<li>配置环境变量</li>
<li>初始化</li>
</ul>
<h3 id="221-安装pyenv">2.2.1 安装<code>pyenv</code></h3>
<p>笔者系统<code>Manjaro</code>，可以直接<code>yay</code>安装：</p>
<pre><code class="language-bash">yay -S pyenv
</code></pre>
<p>其他系统的可以使用<code>apt search</code>/<code>yum search</code>等看看软件包仓库有没有，有的话直接安装即可，没有的话，可以<code>clone</code>安装：</p>
<pre><code class="language-bash">git clone https://github.com/pyenv/pyenv.git ~/.pyenv
</code></pre>
<p>（<strong>这一步是可选的</strong>）接着就是编译动态<code>bash</code>扩展进行加速：</p>
<pre><code class="language-bash">cd ~/.pyenv &amp;&amp; src/configure &amp;&amp; make -C src
</code></pre>
<p>官方解释说，不用害怕编译失败，因为仍然会正常工作。</p>
<h3 id="222-配置环境变量">2.2.2 配置环境变量</h3>
<p>这一步就是把<code>PYENV</code>以及更新后的<code>PATH</code>配置成环境变量，官方文档按照<code>shell</code>类型进行了分类，根据自己情况选择即可。</p>
<h4 id="2221-bash">2.2.2.1 <code>bash</code></h4>
<pre><code class="language-bash">echo 'export PYENV_ROOT=&quot;$HOME/.pyenv&quot;' &gt;&gt; ~/.bash_profile
echo 'export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;' &gt;&gt; ~/.bash_profile
</code></pre>
<h4 id="2222-zsh">2.2.2.2 <code>Zsh</code></h4>
<pre><code class="language-bash">echo 'export PYENV_ROOT=&quot;$HOME/.pyenv&quot;' &gt;&gt; ~/.zshrc
echo 'export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;' &gt;&gt; ~/.zshrc
</code></pre>
<h4 id="2223-fish-shell">2.2.2.3 <code>Fish shell</code></h4>
<pre><code class="language-bash">set -Ux PYENV_ROOT $HOME/.pyenv
set -Ux fish_user_paths $PYENV_ROOT/bin $fish_user_paths
</code></pre>
<h3 id="223-初始化">2.2.3 初始化</h3>
<p>配置完环境变量后还要进行初始化操作，文档同样按<code>shell</code>类型进行了分类。</p>
<h4 id="2231-bash">2.2.3.1 <code>bash</code></h4>
<pre><code class="language-bash">echo -e 'if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\n  eval &quot;$(pyenv init -)&quot;\nfi' &gt;&gt; ~/.bash_profile
</code></pre>
<h4 id="2232-zsh">2.2.3.2 <code>Zsh</code></h4>
<pre><code class="language-bash">echo -e 'if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\n  eval &quot;$(pyenv init -)&quot;\nfi' &gt;&gt; ~/.zshrc
</code></pre>
<h4 id="2233-fish-shell">2.2.3.3 <code>Fish shell</code></h4>
<pre><code class="language-bash">echo -e '\n\n# pyenv init\nif command -v pyenv 1&gt;/dev/null 2&gt;&amp;1\n  pyenv init - | source\nend' &gt;&gt; ~/.config/fish/config.fish
</code></pre>
<h3 id="23-测试">2.3 测试</h3>
<p>重新开启一个终端，输入<code>pyenv</code>，输出如下信息就表明安装成功了：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210204172438108.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="3-基本使用">3 基本使用</h1>
<ul>
<li><code>pyenv commands</code>：查看所有<code>pyenv</code>命令</li>
<li><code>pyenv exec</code>：使用特定<code>Python</code>版本执行某条命令</li>
<li><code>pyenv global</code>：设置或查看全局<code>Python</code>版本</li>
<li><code>pyenv hooks</code>：列出给出的<code>pyenv</code>命令的钩子脚本</li>
<li><code>pyenv init</code>：配置<code>shell</code>环境</li>
<li><code>pyenv install</code>：安装某个版本的<code>Python</code></li>
<li><code>pyenv local</code>：为某个应用设置特定的<code>Python</code>版本</li>
<li><code>pyenv prefix</code>：显示对应<code>Python</code>版本的路径前缀</li>
<li><code>pyenv rehash</code>：再哈希<code>pyenv shims</code>（不清楚有什么用，欢迎评论补充）</li>
<li><code>pyenv root</code>：显示<code>pyenv</code>根目录</li>
<li><code>pyenv shell</code>：为某个<code>shell</code>设置特定的<code>Python</code>版本（与<code>pyenv local</code>类似）</li>
<li><code>pyenv shims</code>：列出当前存在的<code>shims</code>（<code>pyenv</code>的工作原理就是在一个叫<code>shims</code>的目录下创建<code>Python</code>解释器的“假版本”，寻找<code>Python</code>应用时先从该目录查找）</li>
<li><code>pyenv uninstall</code>：卸载某个版本<code>Python</code></li>
<li><code>pyenv --version</code>：显示<code>pyenv</code>版本</li>
<li><code>pyenv version</code>：显示当前<code>Python</code>版本，等价于<code>pyenv version-name</code>+<code>pyenv version-file</code></li>
<li><code>pyenv version-file/version-name/version-origin</code>：当前<code>Python</code>版本对应的文件/名字/位置</li>
<li><code>pyenv whence</code>：列出已安装的一个范围内的<code>Python</code>版本，比如列出本地安装的<code>Python2</code>到<code>Python3</code>的版本，可以使用<code>pyenv whence 2to3</code></li>
<li><code>pyenv which</code>：列出可执行文件的绝对路径，比如<code>pyenv which python</code>可以列出<code>python</code>命令的绝对路径</li>
</ul>
<h1 id="4-实际应用">4 实际应用</h1>
<p>虽然上面说了这么多命令，但实际使用频率高的命令并不多，主要有以下几个：</p>
<ul>
<li><code>pyenv version</code></li>
<li><code>pyenv install</code></li>
<li><code>pyenv global</code></li>
</ul>
<p>一般安装的步骤如下，先使用</p>
<pre><code class="language-bash">pyenv install -l
</code></pre>
<p>查找需要安装的<code>Python</code>版本：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210204203338711.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这里还有一大串，就不全部截图了，比如需要安装<code>3.6.12</code>版本：</p>
<pre><code class="language-bash">pyenv install 3.6.12
</code></pre>
<p>安装之后可以使用</p>
<pre><code class="language-bash">pyenv versions
</code></pre>
<p>查看安装的版本，这里笔者安装有两个，一个是系统自带的<code>Python3.9</code>，一个是<code>pyenv</code>安装的<code>Python3.6</code>：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210204203630707.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>接着使用</p>
<pre><code class="language-bash">pyenv global 3.6.12
</code></pre>
<p>切换到新安装的版本：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20210204203802731.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样就切换到了新安装的版本，如果不是全局替换而是局部替换的话可以使用<code>pyenv local</code>/<code>pyenv shell</code>。</p>
<p>要注意的是切换版本后<code>pip</code>的版本也会不一样，而且两个版本使用<code>pip</code>安装的包也是独立的：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20210204204223400.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/20210204204236190.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="5-参考">5 参考</h1>
<p>1、<a href="https://github.com/pyenv/pyenv">Github-pyenv</a></p>
<p>2、<a href="https://github.com/pyenv/pyenv-installer">Github-pyenv-installer</a></p>
<p>3、<a href="https://zhuanlan.zhihu.com/p/60841150">知乎-Python环境Memo</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第235期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-235-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-235-qi/">
        </link>
        <updated>2021-02-03T16:57:28.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你连世界都没有观过，哪来的世界观？</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>帘外五更风，吹梦无踪。<br>
——李清照《浪淘沙·帘外五更风》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我们都是阴沟里的虫子，但总还得有人仰望星空。</p>
</blockquote>
]]></content>
    </entry>
</feed>