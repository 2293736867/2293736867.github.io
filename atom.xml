<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2021-06-05T03:58:11.758Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>几百遍，重复了几百遍
重复的情绪重复的熬过想你的夜</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[每日分享 第356期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-356-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-356-qi/">
        </link>
        <updated>2021-06-05T02:00:22.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>当生活压得你喘不过气，一定要挺直腰杆，这样被压死时才不难看。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>万顷波光，岳阳楼上，一快披襟。<br>
——戴复古《柳梢青·岳阳楼》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>卑屈游戏谁是先该离场的呢？</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622858538512.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>没什么好说的。。。</p>
<pre><code class="language-java">public class Solution {
    public ListNode removeElements(ListNode head, int val) {
        ListNode temp = head;
        ListNode newHead = null;
        ListNode pre = null;
        while (temp != null){
            while (temp != null &amp;&amp; temp.val == val){
                temp = temp.next;
            }
            if(temp != null) {
                if (newHead == null) {
                    newHead = temp;
                    pre = temp;
                } else {
                    pre.next = temp;
                    pre = pre.next;
                }
                temp = temp.next;
            }else{
                break;
            }
        }
        if(pre != null){
            pre.next = null;
        }
        return newHead;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622858547671.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第355期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-355-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-355-qi/">
        </link>
        <updated>2021-06-04T04:20:18.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你喜欢我哪一点啊？我喜欢你离我远一点。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>春不断、亭台成趣，翠阴蒙密。<br>
——吴文英《满江红·翠幕深庭》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>只要你想，你就是在天涯海角，我都会追去。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622780512189.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>采用一个非常神奇的思路：</p>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622780619089.gif" alt="" loading="lazy"></figure>
<p>只能说妙啊，采用一种“绕回去的处理”，知道两个链表相交。</p>
<pre><code class="language-java">public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode A = headA, B = headB;
        while (A != B) {
            A = A != null ? A.next : headB;
            B = B != null ? B.next : headA;
        }
        return A;
    }
}
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1622780533033.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第354期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-354-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-354-qi/">
        </link>
        <updated>2021-06-03T01:03:24.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>不说没人陪你勇闯天涯，你能找到人陪你喝雪花吗？</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>云日相晖映，空水共澄鲜。<br>
——谢灵运《登江中孤屿》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>多巴胺不等于爱情，爱情却一定有多巴胺！</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622682361367.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>昨天做了那么多前缀和+哈希表做了个寂寞。</p>
<p>才过了493个：</p>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622682403568.png" alt="" loading="lazy"></figure>
<p><s>做了个寂寞</s></p>
<p>下面是官方题解的优化版，使用数组模拟哈希表<code>HashMap</code>：</p>
<pre><code class="language-java">import java.util.Arrays;

public class Solution {
    public int findMaxLength(int[] nums) {
        int res = 0;
        int n = nums.length;
        int mapLen = (n&lt;&lt;1) + 1;
        int [] map = new int[mapLen];
        for (int i = 0; i &lt; mapLen; i++) {
            map[i] = -n;
        }
        int count = n;
        map[n] = -1;
        for (int i = 0; i &lt; n; i++) {
            count += (nums[i] == 1 ? 1 : -1);
            if(map[count] != -n){
                res = Math.max(res,i - map[count]);
            }else{
                map[count] = i;
            }
        }
        return res;
    }
}
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1622682649872.png" alt="" loading="lazy"></figure>
<p><s>心态崩了</s></p>
<p>本质上是维护一个计数器（前缀和），遇到1就加1，遇到0就减1，当哈希表中的计数器出现过时，计算下标之差并与<code>res</code>比较，如果没有出现过就直接放进哈希表中。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第353期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-353-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-353-qi/">
        </link>
        <updated>2021-06-02T02:02:59.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>别说你一无所有，你还有一身债。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>秀色掩今古，荷花羞玉颜。<br>
——李白《西施/咏苎蒙山》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>你说一声，我也默认，我们在这月光下十指生根。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622599403795.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>毫无疑问前缀和，使用同余定理，将所有前缀和的余数和对应的下标放进哈希表中，遍历的时候判断有没有出现了相同的余数，出现了就直接返回<code>true</code>，否则判断余数是否出现过，没有出现过就放进哈希表：</p>
<pre><code class="language-java">import java.util.HashMap;
import java.util.Map;

public class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        int n = nums.length;
        long [] sum = new long[n];
        Map&lt;Long,Integer&gt; map = new HashMap&lt;&gt;();
        map.put((sum[0] = nums[0]) % k,0);
        for (int i = 1; i &lt; n; i++) {
            sum[i] = nums[i] + sum[i-1];
            long mod = sum[i] % k;
            if(mod == 0 || (map.containsKey(mod) &amp;&amp; (i - map.get(mod) &gt; 1))){
                return true;
            }
            if(!map.containsKey(mod)){
                map.put(mod,i);
            }
        }

        return false;
    }
}
</code></pre>
<p>然并卵：</p>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622599553489.png" alt="" loading="lazy"></figure>
<p>看了一下最快的答案：（哈希表？哈个der）</p>
<pre><code class="language-java">class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        for (int i = 0; i &lt; nums.length - 1; i++) {
            if (nums[i] == 0 &amp;&amp; nums[i + 1] == 0) {
                return true;
            }
        }
        for (int i = 0; i &lt; nums.length; i++) {
            int sum = nums[i];
            for (int j = i + 1; j &lt; nums.length; j++) {
                sum += nums[j];
                if (sum % k == 0) {
                    return true;
                }
            }
            if (sum &lt; k) {
                break;
            }
        }
        return false;
    }
}
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1622599684876.png" alt="" loading="lazy"></figure>
<p>我当时就惊呆了，这不就是<code>O(n^2)</code>的优化版吗？怎么这么快？？？</p>
<p><s>好家伙</s></p>
<p>如果将</p>
<pre><code class="language-java">if (sum &lt; k) {
    break;
}
</code></pre>
<p>去掉，就是妥妥的<code>O(n^2)</code>，但是这个判断是真的强，也就是第<code>i</code>个到最后一个的和如果小于<code>k</code>，这样第<code>i+1</code>个到最后一个、第<code>i+2</code>个到最后一个也一定会小于<code>k</code>，换句话说就没有答案出现了，可以直接跳出循环返回<code>false</code>，只是没有想到居然会这么快。。。</p>
<p><s>好家伙</s></p>
<p><s>我爱暴力</s></p>
<p><s>爱个der</s></p>
<h1 id="一位大佬的杂文">一位大佬的杂文</h1>
<h2 id="地址">地址</h2>
<p><a href="https://www.lucienshui.cn/">https://www.lucienshui.cn/</a></p>
<h2 id="一些感想">一些感想</h2>
<p>腾讯实习然后阿里工作的大佬，在学校的时候担任过文体部部长，会吉他，大学谈到现在的女朋友（不知道有没有结婚，好像里面没写），也是个<code>ACM</code>大佬。</p>
<p>怎么说呢，这大佬好像从13年就开始写博客了（那时候他应该是初中？），只不过大概一年一篇的频率，估计没什么时间更。感想的话，羡慕肯定多少有一点的，不过从以前的文章看，多少感觉有点“孤独”的样子：</p>
<figure data-type="image" tabindex="4"><img src="https://2293736867.github.io/post-images/1622600260814.png" alt="" loading="lazy"></figure>
<p>果然是有故事的男人。</p>
<figure data-type="image" tabindex="5"><img src="https://2293736867.github.io/post-images/1622600318188.png" alt="" loading="lazy"></figure>
<p>不过就算是有故事，也不太希望主动提起，想回到以前那个无忧无虑的时代，起码笔者本人是这样想的。</p>
<p>有故事又如何？</p>
<p>没有，又如何？</p>
<p>反正，</p>
<p>又回不去了。</p>
<p>。</p>
<p>无论，是谈过恋爱，还是分手，</p>
<p>无论，是榜上有名，还是倒数第一，</p>
<p>无论，是经历过，还是没有经历过，</p>
<p>都回不去了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日一句  351-400期合集]]></title>
        <id>https://2293736867.github.io/post/mei-ri-yi-ju-351-400-qi-he-ji/</id>
        <link href="https://2293736867.github.io/post/mei-ri-yi-ju-351-400-qi-he-ji/">
        </link>
        <updated>2021-06-01T06:06:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="第351期">第351期</h1>
<blockquote>
<p>梦与现实是不同的，所以才能够为了把梦变为现实而努力。</p>
</blockquote>
<h1 id="第352期">第352期</h1>
<blockquote>
<p>多少岁月与轻狂交织的梦，被遗忘在大海的尽头，随时光匆匆而去。</p>
</blockquote>
<h1 id="第353期">第353期</h1>
<blockquote>
<p>你说一声，我也默认，我们在这月光下十指生根。</p>
</blockquote>
<h1 id="第354期">第354期</h1>
<blockquote></blockquote>
<h1 id="第355期">第355期</h1>
<blockquote></blockquote>
<h1 id="第356期">第356期</h1>
<blockquote></blockquote>
<h1 id="第357期">第357期</h1>
<blockquote></blockquote>
<h1 id="第358期">第358期</h1>
<blockquote></blockquote>
<h1 id="第359期">第359期</h1>
<blockquote></blockquote>
<h1 id="第360期">第360期</h1>
<blockquote></blockquote>
<h1 id="第361期">第361期</h1>
<blockquote></blockquote>
<h1 id="第362期">第362期</h1>
<blockquote></blockquote>
<h1 id="第363期">第363期</h1>
<blockquote></blockquote>
<h1 id="第364期">第364期</h1>
<blockquote></blockquote>
<h1 id="第365期">第365期</h1>
<blockquote></blockquote>
<h1 id="第366期">第366期</h1>
<blockquote></blockquote>
<h1 id="第367期">第367期</h1>
<blockquote></blockquote>
<h1 id="第368期">第368期</h1>
<blockquote></blockquote>
<h1 id="第369期">第369期</h1>
<blockquote></blockquote>
<h1 id="第370期">第370期</h1>
<blockquote></blockquote>
<h1 id="第371期">第371期</h1>
<blockquote></blockquote>
<h1 id="第372期">第372期</h1>
<blockquote></blockquote>
<h1 id="第373期">第373期</h1>
<blockquote></blockquote>
<h1 id="第374期">第374期</h1>
<blockquote></blockquote>
<h1 id="第375期">第375期</h1>
<blockquote></blockquote>
<h1 id="第376期">第376期</h1>
<blockquote></blockquote>
<h1 id="第377期">第377期</h1>
<blockquote></blockquote>
<h1 id="第378期">第378期</h1>
<blockquote></blockquote>
<h1 id="第379期">第379期</h1>
<blockquote></blockquote>
<h1 id="第380期">第380期</h1>
<blockquote></blockquote>
<h1 id="第381期">第381期</h1>
<blockquote></blockquote>
<h1 id="第382期">第382期</h1>
<blockquote></blockquote>
<h1 id="第383期">第383期</h1>
<blockquote></blockquote>
<h1 id="第384期">第384期</h1>
<blockquote></blockquote>
<h1 id="第385期">第385期</h1>
<blockquote></blockquote>
<h1 id="第386期">第386期</h1>
<blockquote></blockquote>
<h1 id="第387期">第387期</h1>
<blockquote></blockquote>
<h1 id="第388期">第388期</h1>
<blockquote></blockquote>
<h1 id="第389期">第389期</h1>
<blockquote></blockquote>
<h1 id="第390期">第390期</h1>
<blockquote></blockquote>
<h1 id="第391期">第391期</h1>
<blockquote></blockquote>
<h1 id="第392期">第392期</h1>
<blockquote></blockquote>
<h1 id="第393期">第393期</h1>
<blockquote></blockquote>
<h1 id="第394期">第394期</h1>
<blockquote></blockquote>
<h1 id="第395期">第395期</h1>
<blockquote></blockquote>
<h1 id="第396期">第396期</h1>
<blockquote></blockquote>
<h1 id="第397期">第397期</h1>
<blockquote></blockquote>
<h1 id="第398期">第398期</h1>
<blockquote></blockquote>
<h1 id="第399期">第399期</h1>
<blockquote></blockquote>
<h1 id="第400期">第400期</h1>
<blockquote></blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第352期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-352-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-352-qi/">
        </link>
        <updated>2021-06-01T05:53:50.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>虽然你长的丑，但是你想的美啊。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>凭栏渐觉春光暝，怅望碧天帆去尽。<br>
——吴翌凤《玉楼春·空园数日无芳信》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>多少岁月与轻狂交织的梦，被遗忘在大海的尽头，随时光匆匆而去。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<p>六一儿童节当然是吃糖果啦：</p>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622527201233.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>前缀和，判断最大与最小：</p>
<ul>
<li>最大：(天数+1)*最大每天吃的糖果数量</li>
<li>最小：天数*1（因为每天至少一颗糖果）</li>
</ul>
<pre><code class="language-java">public class Solution {
    public boolean[] canEat(int[] candiesCount, int[][] queries) {
        int n = queries.length;
        boolean [] res = new boolean[n];
        int m = candiesCount.length;
        long [] sum = new long[m];
        sum[0] = candiesCount[0];
        for (int i = 1; i &lt; m; i++) {
            sum[i] = sum[i-1] + candiesCount[i];
        }

        for (int i = 0; i &lt; n; i++) {
            if(queries[i][0] == 0) {
                res[i] = queries[i][1] &lt; sum[0];
            }else{
                res[i] = (((queries[i][1] + 1)*(long)queries[i][2]) &gt; sum[queries[i][0]-1] &amp;&amp; sum[queries[i][0]] &gt; queries[i][1]);
            }
        }

        return res;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622527220078.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第351期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-351-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-351-qi/">
        </link>
        <updated>2021-05-31T00:35:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>问世间钱为何物，只叫人生死相许。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>日照香炉生紫烟，遥看瀑布挂前川。<br>
——李白《望庐山瀑布》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>梦与现实是不同的，所以才能够为了把梦变为现实而努力。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622421449590.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>与昨天的每日一题差不多，先判断2的幂，再通过<code>0xaaaaaaaa</code>或<code>0x55555555</code>判断即可：</p>
<pre><code class="language-java">public class Solution {
    public boolean isPowerOfFour(int n) {
        return n &gt; 0 &amp;&amp; (n &amp; (n-1)) == 0 &amp;&amp; (n &amp; 0x55555555) != 0;
    }
}
</code></pre>
<p><code>0x55555555</code>的二进制是</p>
<pre><code class="language-bash">0101  0101  0101  0101  0101  0101  0101  0101
</code></pre>
<p>如果是2的幂的同时（只有一个1），与<code>0x55555555</code>相与，肯定不为0，这样就可以判断是4的幂了，同样道理也可以使用<code>0xaaaaaaaa</code>判断：</p>
<pre><code class="language-java">public class Solution {
    public boolean isPowerOfFour(int n) {
        return n &gt; 0 &amp;&amp; (n &amp; (n-1)) == 0 &amp;&amp; (n &amp; 0xaaaaaaaa) == 0;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622421599795.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第350期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-350-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-350-qi/">
        </link>
        <updated>2021-05-30T06:28:55.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>如果你跌倒了，那就，找个舒服的姿势趴着吧。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>无意苦争春，一任群芳妒。<br>
——陆游《卜算子·咏梅》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我把这几个字写了又删，删了又写。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622356263336.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>原数减1后与原数相与，这个操作可以将最右边的一个1变为0，如果只有1个1，也就是如果是2的幂，那么最右边的一个1变为0后整个数就是0。</p>
<pre><code class="language-java">class Solution {
    public boolean isPowerOfTwo(int n) {
        return n&lt;1 ? false : (n &amp; (n - 1)) == 0;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622356156620.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第349期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-349-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-349-qi/">
        </link>
        <updated>2021-05-29T00:55:14.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>正在输入...，给了多少人希望，又给了多少人失望。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>美女渭桥东，春还事蚕作。<br>
——李白《陌上桑》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>定义虽然精确，现实极度模糊。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622249816294.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>这题是以<a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">560、和为K的子数组</a>作为基础的：</p>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622249881301.png" alt="" loading="lazy"></figure>
<p>560题可以使用哈希表将复杂度从<code>O(n^2)</code>降到<code>O(n)</code>，每一次计算前缀和的时候，计算<code>prefixSum - k</code>是否在哈希表中出现过，如果出现过，从哈希表中取值对应的值并累加到结果中，最后将<code>prefixSum</code>添加到哈希表中，将<code>prefixSum</code>的出现次数加1（默认为0）：</p>
<pre><code class="language-java">class Solution {
    public int subarraySum(int[] nums, int k) {
        int n = nums.length;
        Map&lt;Integer,Integer&gt; map = new HashMap&lt;&gt;(n);
        map.put(0,1);
        int sum = 0;
        int count = 0;
        for (int i = 0; i &lt; n; i++) {
            sum += nums[i];
            if(map.containsKey(sum - k)) {
                count += map.get(sum-k);
            }
            map.put(sum,map.getOrDefault(sum,0)+1);
        }
        return count;
    }
}
</code></pre>
<p>这题同样需要使用到这个方法（来自官方题解）：</p>
<pre><code class="language-java">class Solution {
    public int numSubmatrixSumTarget(int[][] matrix, int target) {
        int ans = 0;
        int m = matrix.length, n = matrix[0].length;
        for (int i = 0; i &lt; m; ++i) { // 枚举上边界
            int[] sum = new int[n];
            for (int j = i; j &lt; m; ++j) { // 枚举下边界
                for (int c = 0; c &lt; n; ++c) {
                    sum[c] += matrix[j][c]; // 更新每列的元素和
                }
                ans += subarraySum(sum, target);
            }
        }
        return ans;
    }

    public int subarraySum(int[] nums, int k) {
        Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();
        map.put(0, 1);
        int count = 0, pre = 0;
        for (int x : nums) {
            pre += x;
            if (map.containsKey(pre - k)) {
                count += map.get(pre - k);
            }
            map.put(pre, map.getOrDefault(pre, 0) + 1);
        }
        return count;
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第348期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-348-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-348-qi/">
        </link>
        <updated>2021-05-27T16:32:47.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>命只有一条，但要命的事，可不止一件。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>毫端蕴秀临霜写，口齿噙香对月吟。<br>
——曹雪芹《咏菊》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>沉默——真正猎手的选择。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1622133327190.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>按位计算（<s>差点被昨天的异或求1误导了。。。</s>）：</p>
<pre><code class="language-java">public class Solution {
    public int totalHammingDistance(int[] nums) {
        int n = nums.length;
        int sum = 0;

        for (int i = 0; i &lt; 32; i++) {
            int c = 0;
            for (int j = 0; j &lt; n; j++) {
                c += (nums[j] &gt;&gt; i) &amp; 1;
            }
            sum += c * (n-c);
        }
        return sum;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1622133330537.png" alt="" loading="lazy"></figure>
<h1 id="启程">启程</h1>
<p>Good luck.</p>
]]></content>
    </entry>
</feed>