<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2021-02-18T08:46:28.579Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>我配不上你，
纵然很努力。</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[解决IDEA Gradle构建报错"Cause: zip END header not found"]]></title>
        <id>https://2293736867.github.io/post/jie-jue-idea-gradle-gou-jian-bao-cuo-cause-zip-end-header-not-found/</id>
        <link href="https://2293736867.github.io/post/jie-jue-idea-gradle-gou-jian-bao-cuo-cause-zip-end-header-not-found/">
        </link>
        <updated>2021-02-18T08:45:04.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-问题描述">1 问题描述</h1>
<p>某天使用<code>Gradle</code>构建项目时，<code>IDEA</code>报错如下：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210218103240572.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="2-原因">2 原因</h1>
<p>原因是下载的<code>Gradle</code>，也就是<code>zip</code>压缩包不完整，导致无法使用<code>Gradle</code>构建。</p>
<h1 id="3-解决方法">3 解决方法</h1>
<h2 id="31-删除本地缓存重新下载">3.1 删除本地缓存重新下载</h2>
<p>首先打开<code>IDEA</code>设置中的<code>Gradle</code>，找到<code>Gradle user home</code>：</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210218103500710.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>比如笔者的是<code>~/.gradle</code>，打开其中的<code>wrapper/dists</code>，就可以看到缓存的<code>Gradle</code>：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210218104307551.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>删除对应版本的<code>Gradle</code>即可，<code>IDEA</code>会自动重新下载。</p>
<h2 id="32-设置特定版本的gradle">3.2 设置特定版本的<code>Gradle</code></h2>
<p>如果清除缓存重新下载不行，可以设置特定版本的<code>Gradle</code>，首先下载<a href="https://services.gradle.org/distributions/">Gradle</a>到本地，下载最新版的<code>xxx-all.zip</code>即可：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210218104832815.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>下载后修改项目文件夹下的<code>gradle/wrapper/gradle-wrapper.properties</code>，参考<a href="https://blog.buercheng.space/posts/3790347158/#2-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95">此处</a>修改<code>distributionUrl</code>为本地路径：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210218104942158.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>默认<code>Gradle</code>配置如下：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210218105247997.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>一般来说修改<code>distributionUrl</code>即可，如果请查看报错修改设置。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第249期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-249-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-249-qi/">
        </link>
        <updated>2021-02-18T02:19:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>恋爱时会觉得像吸毒一样，分手了又会像戒毒一样。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>醉卧古藤阴下，了不知南北。<br>
——秦观《好事近·梦中作》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>善恶终有报，天道好轮回。不信抬头看，苍天饶过谁。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决WebStorm无法正确识别Vue3组合式API的问题]]></title>
        <id>https://2293736867.github.io/post/jie-jue-webstorm-wu-fa-zheng-que-shi-bie-vue3-zu-he-shi-api-de-wen-ti/</id>
        <link href="https://2293736867.github.io/post/jie-jue-webstorm-wu-fa-zheng-que-shi-bie-vue3-zu-he-shi-api-de-wen-ti/">
        </link>
        <updated>2021-02-17T05:11:22.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-问题描述">1 问题描述</h1>
<p><code>Vue3</code>的组合式<code>API</code>无法在<code>WebStorm</code>中正确识别，表现为<code>defineComponent</code>等无法被识别：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210217111356204.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="2-尝试方案">2 尝试方案</h1>
<p>猜想这种问题的原因是无法正确识别对应的<code>Vue3</code>库，笔者相信<code>WebStorm</code>是可以做到的，只是某些配置没有正确，笔者尝试过在设置的<code>Libraries</code>中勾选上<code>node_modules</code>，但是没有效果。</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210217111636524.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="3-解决办法">3 解决办法</h1>
<p>最终的解决办法参考了<a href="https://my.oschina.net/u/3623645/blog/4779504">此处</a>（图源）：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210217112022698.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>选择<code>node_modules</code>文件夹，右键选择<code>Mark Directory as</code>，最后选择<code>Not Excluded</code>即可。</p>
<p>之后会花费一段时间索引，等待完成即可。</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210217113344263.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="4-一些思考">4 一些思考</h1>
<p>看了一下<code>WebStorm</code>的<a href="https://www.jetbrains.com/help/webstorm/configuring-project-structure.html">文档</a>，项目中的文件夹总共分为四类：</p>
<ul>
<li><code>Source</code>：默认选项，所有文件夹默认都被视为<code>Source</code>除非设置为了<code>Tests</code>/<code>Resource Root</code>/<code>Excluded</code></li>
<li><code>Tests</code>：标记为测试的文件夹</li>
<li><code>Resource Root</code>：资源文件夹，在输入某些需要资源的代码时，比如<code>&lt;img src=xxxx&gt;</code>，会自动提示该文件夹路径下的资源文件</li>
<li><code>Excluded</code>：代码补全、代码导航等会忽略的文件夹。这个选项能提高<code>WebStorm</code>性能</li>
</ul>
<p>在设置中搜索<code>Directories</code>可以发现<code>node_modules</code>默认是<code>Excluded</code>：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210217113056222.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>标记为<code>Not Excluded</code>后，就不是红色了：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210217130650155.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>因此解决并不难，只是无法正确识别的原因。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第248期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-248-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-248-qi/">
        </link>
        <updated>2021-02-16T17:43:57.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>我虽然不能来一场，说走就走的旅行，但我有一个说胖就胖的体质。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>一片砧敲千里白，半轮鸡唱五更残。<br>
——曹雪芹《香菱咏月·其三》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>爸爸我也不是一生下来就是爸爸，爸爸也是头一次当爸爸。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ElementPlusViteStarterPnpm版本]]></title>
        <id>https://2293736867.github.io/post/elementplusvitestarterpnpm-ban-ben/</id>
        <link href="https://2293736867.github.io/post/elementplusvitestarterpnpm-ban-ben/">
        </link>
        <updated>2021-02-15T19:24:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-起因">1 起因</h1>
<p>由于最近<code>Vite</code>升级了2.x版本，项目中需要改动的东西有点多，本来想基于官方给出的<a href="https://github.com/element-plus/element-plus-vite-starter">starter</a>重做，但是又看到了一个叫<code>pnpm</code>的仓库，构建速度会比原生<code>npm/yarn</code>快两倍以上：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210216024507800.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>因此模仿官方starter做了一个<code>pnpm</code>版本的starter，希望能帮助到需要的同学。</p>
<h1 id="2-环境准备">2 环境准备</h1>
<ul>
<li><code>Node.js</code></li>
<li><code>npm</code></li>
<li><code>pnpm</code></li>
</ul>
<p><code>Node.js</code>与<code>npm</code>的安装就不说了，本来笔者使用的是<code>cnpm</code>，虽然速度上相比起<code>npm</code>有所改进，而且<code>cnpm</code>的输出也更加友好，但是使用了<code>pnpm</code>，相比起来感觉还是差了那么一点。</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210216024839751.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>安装<code>pnpm</code>之前，可以先把<code>cnpm</code>卸载（当然也可以选择不卸载）：</p>
<pre><code class="language-bash">npm uninstall -g cnpm
</code></pre>
<p>再设置一下淘宝镜像：</p>
<pre><code class="language-bash">npm config set registry https://registry.npm.taobao.org
</code></pre>
<p>然后安装<code>pnpm</code>（笔者系统<code>Manjaro</code>，<code>aur</code>已经提供了，可以直接<code>yay</code>安装）：</p>
<pre><code class="language-bash">yay -S pnpm
# 也可以使用npm安装
npm install -g pnpm
</code></pre>
<p>测试：</p>
<pre><code class="language-bash">pnpm -v
</code></pre>
<p>使用<code>pnpm</code>命令时，只需替换原生的<code>npm</code>命令即可，比如使用</p>
<pre><code class="language-bash">pnpm install
</code></pre>
<p>去代替</p>
<pre><code class="language-bash">npm install
</code></pre>
<p>同理<code>npx</code>的代替品是<code>pnpx</code>。</p>
<h1 id="3-初始化">3 初始化</h1>
<p>基于<a href="https://vitejs.dev/guide/">Vite Getting Started</a>文档，输入</p>
<pre><code class="language-bash">pnpm init @vitejs/app
</code></pre>
<p>接着输入项目名字，并选择模板：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210216025554661.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>默认提供的模板如图所示，选择完成后即可。</p>
<p>也可以一步创建完成：</p>
<pre><code class="language-bash">pnpm init @vitejs/app my-vue-app --template vue
</code></pre>
<p>接着安装依赖：</p>
<pre><code class="language-bash">pnpm install 
pnpm install --save element-plus
</code></pre>
<p>这样就完成了初始化工作，项目结构如下：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210216030013804.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="4-引入elementplus">4 引入<code>ElementPlus</code></h1>
<p>按照<a href="https://element-plus.gitee.io/#/zh-CN/component/installation">ElementPlus</a>文档引入，修改<code>main.js</code>如下：</p>
<pre><code class="language-js">import { createApp } from 'vue'
import App from './App.vue'
import ElementPlus from 'element-plus'
import 'element-plus/lib/theme-chalk/index.css'

createApp(App).use(ElementPlus).mount('#app')
</code></pre>
<p>将以下图片覆盖<code>logo.png</code>：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210216030316778.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>下一步就是修改<code>HelloWorld.vue</code>中的<code>button</code>，并把<code>&lt;h1&gt;</code>下面的<code>&lt;p&gt;</code>注释掉：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210216031129947.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>最后修改<code>App.vue</code>，改动其中的<code>&lt;image&gt;</code>大小，以及<code>&lt;HelloWorld&gt;</code>中的标题文字：</p>
<pre><code class="language-html">&lt;template&gt;
  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; id=&quot;img&quot;/&gt;
  &lt;HelloWorld msg=&quot;Hello Vue 3.0 + Element Plus + Vite + pnpm&quot; /&gt;
&lt;/template&gt;

&lt;script setup&gt;
import HelloWorld from './components/HelloWorld.vue'

&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
#img{
  width: 50%;
}
&lt;/style&gt;
</code></pre>
<h1 id="5-运行">5 运行</h1>
<p>终端运行可以直接输入<code>vite</code>即可，需要制定端口可以修改为<code>vite --port xxxx</code>，<code>WebStorm</code>运行建议先添加一个<code>npm</code>运行配置：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20210216031011815.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>左边是自制的starter，右边是官方的，可以看到基本一致：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/2021021603124533.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-源码">6 源码</h1>
<ul>
<li><a href="https://github.com/2293736867/ElementPlusViteStarterPnpm">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/ElementPlusViteStarterPnpm">码云</a></li>
<li><a href="https://codechina.csdn.net/qq_27525611/ElementPlusViteStarterPnpm">CODECHINA</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第247期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-247-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-247-qi/">
        </link>
        <updated>2021-02-15T17:33:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>夜撩了酒，酒撩了你，你撩了我，穷困潦倒了我们。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>危楼高百尺，手可摘星辰。<br>
——李白《夜宿山寺》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>忘却并不是可怕的，而是你不肯。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第246期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-246-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-246-qi/">
        </link>
        <updated>2021-02-14T17:31:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>爱一个人一定要告诉她，那样你才会知道，她有多讨厌你。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>老去秋风吹我恶，梦回寒月照人孤。<br>
——文天祥《金陵驿二首》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>幸运的人一生都在被童年治愈，不幸的人一生都在治愈童年。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第245期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-245-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-245-qi/">
        </link>
        <updated>2021-02-13T16:19:01.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你喜欢我哪一点啊？我喜欢你离我远一点。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>君在阴兮影不见，君依光兮妾所愿。<br>
——傅玄《车遥遥篇》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>那随风飘荡的蒲公英种子，会在什么时候决定自己的命运呢？</p>
</blockquote>
<h1 id="情人节快乐啊">情人节快乐啊！</h1>
<p>又是一个虐狗的节日。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人生第一个扩展——Github1s]]></title>
        <id>https://2293736867.github.io/post/ren-sheng-di-yi-ge-kuo-zhan-github1s/</id>
        <link href="https://2293736867.github.io/post/ren-sheng-di-yi-ge-kuo-zhan-github1s/">
        </link>
        <updated>2021-02-13T05:34:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-灵感">1 灵感</h1>
<p>某天看到了一个叫<a href="https://github.com/conwnet/github1s">github1s</a>的仓库：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210213100150724.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>基于<code>Node.JS</code>、<code>Yarn</code>、<code>Python</code>等技术栈，在<code>github.com</code>上面加上“一秒”，也就是<code>github1s.com</code>，就能在<code>VSCode</code>中打开该仓库，非常好用。</p>
<p>同时笔者安装有一个叫<code>Sourcegraph</code>的扩展，就是下面这个：</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210213100435129.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>用过的同学都知道这个扩展是干嘛的，于是笔者就想类似的在这个扩展旁边加一个超链接的扩展直接打开<code>github1s.com</code>，效果图已经在上面了，点击那个<code>VSCode</code>的图标就可以直接打开。</p>
<h1 id="2-动手">2 动手</h1>
<p>由于笔者并没有扩展开发的经验，因此先去看了一下<code>Chrome</code>扩展开发的文档并留下了一篇<a href="https://blog.csdn.net/qq_27525611/article/details/113791799">基础教程博客</a>，然后就可以开始动手了，项目结构如下：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210213101228391.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="3-图标">3 图标</h1>
<p>关于图标，其实是花了一点时间的，比如，受到<a href="https://github.com/bestony/logoly">该仓库</a>的影响，一开始定的图标是下面这样子的：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210213101431248.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>然后想了一下好像不太对劲，就改成了这样子的：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210213101502695.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>至于在扩展管理中显示的图片，改成了一个比较简单的：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210213101556477.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样图标的问题就解决了。</p>
<h1 id="4-显示">4 显示</h1>
<p>下一步就是添加功能到扩展中并且让其显示在<code>Sourcegraph</code>的旁边，首先<code>manifest.json</code>如下：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;Github1s&quot;,
    &quot;description&quot;: &quot;One second to read GitHub code with VS Code.(https://github.com/conwnet/github1s)&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3,
    &quot;content_scripts&quot;: [{
        &quot;matches&quot;: [&quot;https://github.com/*/*&quot;],
        &quot;js&quot;: [&quot;/js/icon.js&quot;,&quot;/js/init.js&quot;]
    }],
    &quot;action&quot;: {
        &quot;default_icon&quot;: {
            &quot;16&quot;: &quot;/icons/logo16.png&quot;,
            &quot;32&quot;: &quot;/icons/logo32.png&quot;,
            &quot;48&quot;: &quot;/icons/logo48.png&quot;,
            &quot;128&quot;: &quot;/icons/logo128.png&quot;
        }
    },
    &quot;icons&quot;: {
        &quot;16&quot;: &quot;/icons/logo16.png&quot;,
        &quot;32&quot;: &quot;/icons/logo32.png&quot;,
        &quot;48&quot;: &quot;/icons/logo48.png&quot;,
        &quot;128&quot;: &quot;/icons/logo128.png&quot;
    }
}
</code></pre>
<p>解释一下<code>content_scripts</code>，当匹配到<code>matches</code>中的<code>URL</code>时，便会自动执行<code>js</code>里面的脚本，先来看一下<code>init.js</code>，这个脚本的作用就是添加把图标添加到<code>Sourcegraph</code>的旁边：</p>
<pre><code class="language-js">let list = document.getElementsByClassName(&quot;pagehead-actions&quot;)

if (list.length &gt; 0) {
    list = list[0]
    const li = document.createElement('li')
    const a = document.createElement('a')

    a.href = 'https://github1s.com/' + window.location.href.split('github.com')[1]
    a.target = '_black'
    a.className = 'btn btn-sm tooltipped tooltipped-s'
    a.style.height = '28px'
    a.style.paddingBottom = '0'
    a.style.paddingTop = '2px'
    a.innerHTML = base64Logo
    a.setAttribute('aria-label','Open with VSCode')

    li.append(a)
    list.insertBefore(li, list.getElementsByTagName(&quot;li&quot;)[0])
}
</code></pre>
<p>因为看了一下这里的代码：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20210213102148821.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>就是一个<code>&lt;ul&gt;</code>包含<code>&lt;li&gt;</code>，于是就手动添加了一个<code>&lt;li&gt;</code>，里面包含一个<code>&lt;a&gt;</code>，加上样式、超链接以及一个叫<code>ariaLabel</code>的属性，这个属性会在光标悬浮的时候显示：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20210213102326903.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/20210213102423911.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样功能就实现了，剩下的问题就是图标的显示，因为不能直接插入图片：</p>
<pre><code class="language-js">a.innerHTML = '&lt;img src=&quot;/icons/code20.png&quot;&gt;'
</code></pre>
<p>因为这样会被解析成：</p>
<pre><code class="language-html">&lt;img src=&quot;https://github.com/icons/code20.png&quot;&gt;
</code></pre>
<p>另外也考虑到缩放的问题，因此采用了<code>base64</code>+<code>svg</code>显示：</p>
<figure data-type="image" tabindex="10"><img src="https://img-blog.csdnimg.cn/20210213102750335.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样扩展就开发完成了。</p>
<h1 id="5-测试">5 测试</h1>
<p>测试环境：</p>
<ul>
<li><code>Chrome 88.0.4324.150</code></li>
<li><code>Chromium 88.0.4324.150</code></li>
<li><code>Brave 1.19.92</code></li>
<li><code>FireFox 85.0.1</code></li>
</ul>
<p>安装的时候开启开发者模式，选择<code>Load unpacked</code>即可。火狐的话打开<code>about:debugging#/runtime/this-firefox</code>，选择<code>Load Temporary Add-on</code>，接着选择<code>manifest.json</code>即可。</p>
<p><code>Brave</code>测试：</p>
<figure data-type="image" tabindex="11"><img src="https://img-blog.csdnimg.cn/20210213113036762.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>Chrome</code>测试：</p>
<figure data-type="image" tabindex="12"><img src="https://img-blog.csdnimg.cn/20210213113141665.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>Chromium</code>测试：</p>
<figure data-type="image" tabindex="13"><img src="https://img-blog.csdnimg.cn/20210213113247658.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>FireFox</code>测试失败，因为目前版本（<code>85.0.1</code>）不支持<code>Manifest V3</code>，只支持<code>Manifest V2</code>，修改为<code>V2</code>版本后成功：</p>
<figure data-type="image" tabindex="14"><img src="https://img-blog.csdnimg.cn/20210213113518283.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-关于firefox">6 关于<code>FireFox</code></h1>
<p>上面也说了目前<code>FireFox</code>不支持<code>Manifest V3</code>版本，因此如果需要使用<code>Manifest V2</code>版本，两者比较可以参考<a href="https://developer.chrome.com/docs/extensions/mv3/intro/mv3-migration/">官方文档</a>。</p>
<h1 id="7-发布">7 发布</h1>
<p>发布很简单，扩展管理页面选择<code>Pack Extension</code>即可。</p>
<p>如果需要发布到<code>Chrome Web Store</code>，需要注册成为<code>Chrome</code>网上应用商店开发者，可以参考<a href="https://developer.chrome.com/docs/extensions/mv3/hosting/">官方文档</a>。</p>
<h1 id="8-源码">8 源码</h1>
<ul>
<li><a href="https://github.com/2293736867/Github1sExtension">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/Github1sExtension">码云</a></li>
<li><a href="https://codechina.csdn.net/qq_27525611/Github1sExtension">CODECHINA</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第244期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-244-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-244-qi/">
        </link>
        <updated>2021-02-13T02:49:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你这么擅长安慰他人，一定度过了许多，自己安慰自己的日子吧。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>乡心新岁切，天畔独潸然。<br>
——刘长卿《新年作》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>永远别放弃一个每天都在想念的人。</p>
</blockquote>
]]></content>
    </entry>
</feed>