<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2021-04-09T00:53:27.843Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>我配不上你，
纵然很努力。</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[每日分享 第299期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-299-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-299-qi/">
        </link>
        <updated>2021-04-09T00:33:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>凡是不赚钱的，都说自己在创业。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>春水碧于天，画船听雨眠。<br>
——韦庄《菩萨蛮·人人尽说江南好》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>和绝望，和睦相处。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1617928474795.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>二分，中间值与右边值比较：</p>
<ul>
<li>如果中间值小于右边值，则忽略右半区间</li>
<li>如果中间值大于右边值，则忽略左半区间</li>
<li>如果中间值等于右边值，因为允许重复值的存在，不能判断忽略哪一边的区间，只能将右指针减1，并继续循环</li>
</ul>
<pre><code class="language-java">class Solution {
    public int findMin(int[] nums) {
        int n = nums.length;
        int l = 0;
        int r = n-1;
        while(l&lt;r){
            int m = (l+r)/2;
            if(nums[m] &gt; nums[r]){
                l = m+1;
            }else if(nums[m] &lt; nums[r]){
                r = m;
            }else{
                --r;
            }
        }
        return nums[l];
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1617928450436.png" alt="" loading="lazy"></figure>
<h1 id="蚂蚁电话面">蚂蚁电话面</h1>
<p>昨天晚上电话面了蚂蚁，感觉自己有很多答不上来，或者说答上来的不怎么全面，比如，问了一下<code>JVM</code>，然后答了方法区、直接内存、堆区、栈区、本地方法区、<code>PC</code>寄存器。</p>
<p>然后就问了里面有什么。</p>
<p>好吧只是看过不记得了，怎么就不问堆组成，<code>GC</code>算法，<code>G1</code>回收器，类加载器，，，，，，</p>
<p><s>太菜了太菜了，，，，</s></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第298期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-298-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-298-qi/">
        </link>
        <updated>2021-04-08T11:52:56.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>以前我每天都会买彩票，终于有一天，我连彩票也买不起了。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>唯有相思似春色，江南江北送君归。<br>
——王维《送沈子归江东》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>爸爸我也不是一生下来就是爸爸，爸爸也是头一次当爸爸。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1617841682575.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<pre><code class="language-java">class Solution {
    public int findMin(int[] nums) {
        int n = nums.length;
        if(n == 1){
            return nums[0];
        }
        int l = 0;
        int r = n-1;
        int m = (l+r)/2;
        while(l&lt;r){
            if(nums[m] &gt; nums[r]){
                l = m+1;
            }else{
                r = m;
            }
            m = (l+r)/2;
        }
        return nums[l];
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1617841475684.png" alt="" loading="lazy"></figure>
<h1 id="关于一些一行代码ac的题目">关于一些一行代码AC的题目</h1>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1617796838448.png" alt="" loading="lazy"></figure>
<pre><code class="language-java">class Solution {
    public int maximumWealth(int[][] accounts) {
        return Arrays.stream(accounts).mapToInt(t -&gt; Arrays.stream(t).sum()).max().orElse(0);
    }
}
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://2293736867.github.io/post-images/1617797331792.png" alt="" loading="lazy"></figure>
<pre><code class="language-java">class Solution {
    public int maximum(int a, int b) {
        return (int)(((long) a + (long) b +Math.abs((long) a - (long) b))/2);
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux pgrep命令]]></title>
        <id>https://2293736867.github.io/post/linux-pgrep-ming-ling/</id>
        <link href="https://2293736867.github.io/post/linux-pgrep-ming-ling/">
        </link>
        <updated>2021-04-07T04:07:28.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-pgrep">1 <code>pgrep</code></h1>
<p><code>pgrep</code>是一个根据名称查找进程<code>ID</code>的命令，返回的是进程<code>ID</code>，若存在当个进程，则分为不同的行返回<code>ID</code>（默认实现）。</p>
<h1 id="2-示例">2 示例</h1>
<p>查找<code>java</code>进程：</p>
<pre><code class="language-bash">pgrep java
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210407110625110.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>上图还显示了<code>ps</code>与<code>pgrep</code>的区别，简单来说：</p>
<pre><code class="language-bash">pgrep name
等价于
ps -e | grep name | awk '{print $1}'
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210407110833970.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="3-常用参数">3 常用参数</h1>
<ul>
<li><code>-l</code>：显示<code>PID</code>和进程名称</li>
<li><code>-a</code>：显示详细信息</li>
<li><code>-c</code>：计算进程数量</li>
<li><code>-n/-o</code>：显示进程号最大与最小的进程</li>
</ul>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210407111454587.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="4-与其他命令配合">4 与其他命令配合</h1>
<p>一般<code>pgrep</code>需要和其他命令配合使用，最常见的是<code>kill</code>：</p>
<pre><code class="language-bash">pgrep name | xargs kill -15
</code></pre>
<p>注意需要使用<code>xargs</code>传递参数，而不能只使用管道，这样是话会提示<code>not enough arguments</code>：</p>
<pre><code class="language-bash">pgrep name | kill -15
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210407111927228.png" alt="在这里插入图片描述" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第297期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-297-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-297-qi/">
        </link>
        <updated>2021-04-06T23:53:08.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你坐过的最挤的公交车是什么？只是路过，却被挤上了车。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>为近都门多送别，长条折尽减春风。<br>
——白居易《青门柳》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我会一直喜欢到你不再需要我喜欢你为止。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1617753264984.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>二分查找（<code>O(n)</code>时间）：</p>
<pre><code class="language-java">import java.util.*;

class Solution {
    public boolean search(int[] nums, int target) {
        int n = nums.length;
        if(n == 1){
            return nums[0] == target;
        }
        int l = 0;
        int r = n-1;
        if(nums[l] == target || nums[r] == target){
            return true;
        }
        int m = 1;
        for(;m&lt;n &amp;&amp; nums[m] &gt;= nums[m-1];++m){
            if(nums[m-1] == target){
                return true;
            }
        }
        if(m == n){
            m = (l+r) / 2;
        }
        if(nums[m] == target){
            return true;
        }
        if(nums[m] &gt; target){
            return false;
        }
        if(nums[r] &gt; target){
            l = m;
        }else{
            r = m;
        }
        for(m = (l+r)/2;l&lt;r;m = (l+r)/2){
            if(nums[m] == target){
                return true;
            }
            if(nums[m] &gt; target){
                r = m-1;
            }else{
                l = m+1;
            }
        }
        return false;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1617753310280.png" alt="" loading="lazy"></figure>
<h1 id="太菜了太菜了完犊子完犊子"><s>太菜了太菜了完犊子完犊子</s></h1>
<p>这是另外做的，特地挑了条困难的做，不出所料果然不会做：</p>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1617763682944.png" alt="" loading="lazy"></figure>
<p>题目描述很简单，就是找到最长的有效括号子串。</p>
<p><s>但众所周知题目越短难度越高。</s></p>
<p>一开始尝试动态规划，从一个dp数组变为一个dpl数组加一个dpr数组，好像发现不行，样例都过不了，反正是找不出转移方程，看了题解才知道转移方程还能是这样的：</p>
<figure data-type="image" tabindex="4"><img src="https://2293736867.github.io/post-images/1617763826310.png" alt="" loading="lazy"></figure>
<p>dp原来还可以在下标里面，，，</p>
<p><s>怪我太菜了，，，</s></p>
<p>另外当时一开始做的时候想到用栈，但是这种最长的，用栈需要遍历每一个位置，<code>O(n^3)</code>，看了一下题解的优化，原来栈存的是下标，这样就可以保存之前计算过的结果，可以降到<code>O(n)</code>：</p>
<figure data-type="image" tabindex="5"><img src="https://2293736867.github.io/post-images/1617764010014.png" alt="" loading="lazy"></figure>
<p><s>怪我太菜了，，，</s></p>
<p>最后一种方法是使用两个计数器（<code>left</code>+<code>right</code>，<code>left</code>保存当前的左括号数量，<code>right</code>保存当前的右括号数量）+正向遍历+反向遍历，当两个计数器大小一样时，计算它们的和并与最大值比较。正向遍历时，<code>right&gt;left</code>时清空两个计数器，反向遍历时，<code>left&gt;right</code>时清空两个计数器：</p>
<figure data-type="image" tabindex="6"><img src="https://2293736867.github.io/post-images/1617764234183.png" alt="" loading="lazy"></figure>
<p>最后。。。</p>
<pre><code class="language-java">import java.util.*;

class Solution {
    public int longestValidParentheses(String s) {
        int n = s.length();
        if(n &lt;= 1){
            return 0;
        }
        char[] c = s.toCharArray();
        int l = 0;
        int r = 0;
        int max = 0;
        for (int i = 0; i &lt; n; i++) {
            if(c[i] == '('){
                ++l;
            }else{
                ++r;
            }
            if(l == r &amp;&amp; l+r &gt; max){
                max = l+r;
            }
            if(r &gt; l){
                r = l = 0;
            }
        }
        l = r = 0;
        for (int i = n-1; i &gt;= 0; --i) {
            if(c[i] == '('){
                ++l;
            }else{
                ++r;
            }
            if(l == r &amp;&amp; l+r &gt; max){
                max = l+r;
            }
            if(l &gt; r){
                l = r = 0;
            }
        }
        return max;
    }
}
</code></pre>
<p>好吧我是fw。。。</p>
<figure data-type="image" tabindex="7"><img src="https://2293736867.github.io/post-images/1617764293834.png" alt="" loading="lazy"></figure>
<p><s>fwfwfwfwfw。。。。</s></p>
<p><s>完犊子完犊子</s></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第296期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-296-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-296-qi/">
        </link>
        <updated>2021-04-06T02:08:46.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>为什么要吵架呢？就不能心平气和的坐下来，打对方几巴掌吗？</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>可堪孤馆闭春寒，杜鹃声里长门暮。<br>
——秦观《踏莎行·郴州旅舍》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>鞭炮再想，可哪有我想你那么想。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1617674981156.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>版本1：</p>
<pre><code class="language-java">class Solution {
    public int removeDuplicates(int[] nums) {
        int n = nums.length;
        for (int i = 0; i &lt; n; i++) {
            int j = i+1;
            while(j &lt; n &amp;&amp; nums[i] == nums[j]){
                ++j;
            }
            if(j-i &gt; 2){
                for (int k = 2; j+k-2 &lt; n; k++) {
                    nums[i+k] = nums[j+k-2];
                }
                n -= (j-i-2);
                ++i;
            }
        }
        return n;
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1617675025921.png" alt="" loading="lazy"></figure>
<p>版本2：</p>
<pre><code class="language-java">class Solution {
    public int removeDuplicates(int[] nums) {
        int n = nums.length;
        if(n &lt;= 2){
            return n;
        }
        int s = 2;
        for (int f = 2; f &lt; n; ++f) {
            if(nums[f] != nums[s-2]){
                nums[s++] = nums[f];
            }
        }
        return s;
    }
}
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1617675575565.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第295期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-295-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-295-qi/">
        </link>
        <updated>2021-04-05T05:17:07.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>做好人没希望，做坏人不擅长。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>庄生晓梦迷蝴蝶，望帝春心托杜鹃。<br>
——李商隐《锦瑟》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>人们总是在意得不到的，从而忘记已经拥有的。</p>
</blockquote>
<h1 id="每日力扣">每日力扣</h1>
<p>从今天起，这里会多一个栏目叫每日力扣，记录一些力扣每日一题的过程。</p>
<h2 id="题目">题目</h2>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1617599905888.png" alt="" loading="lazy"></figure>
<h2 id="解答">解答</h2>
<p>版本1：</p>
<pre><code class="language-java">import java.util.*;

public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = 0;
        int i1 = 0;
        int i2 = 0;
        int [] numTemp = Arrays.copyOfRange(nums1,0,m);
        while(i1 &lt; m &amp;&amp; i2&lt;n){
            nums1[i++] = (numTemp[i1] &gt; nums2[i2] ? nums2[i2++] : numTemp[i1++]);
        }
        while(i1 &lt; m){
            nums1[i++] = numTemp[i1++];
        }
        while (i2 &lt; n) {
            nums1[i++] = nums2[i2++];
        }
    }
}
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1617599921496.png" alt="" loading="lazy"></figure>
<p>版本2：</p>
<pre><code class="language-java">public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i = m+n-1;
        int i1 = m-1;
        int i2 = n-1;
        while(i1 &gt;= 0 &amp;&amp; i2 &gt;= 0){
            nums1[i--] = (nums1[i1] &lt; nums2[i2] ? nums2[i2--] : nums1[i1--]);
        }
        while(i1 &gt;= 0){
            nums1[i--] = nums1[i1--];
        }
        while (i2 &gt;= 0) {
            nums1[i--] = nums2[i2--];
        }
    }
}
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1617600091781.png" alt="" loading="lazy"></figure>
<p>理论上来说版本2比版本1少了<code>O(m)</code>的空间，但是内存消耗还是差不多。。。可能是<code>m</code>值太低了。</p>
<p>看了一下内存占用的排名，好家伙第一名的代码也是额外的三个变量？？？</p>
<figure data-type="image" tabindex="4"><img src="https://2293736867.github.io/post-images/1617600241916.png" alt="" loading="lazy"></figure>
<p>？？？？？</p>
<p>直呼好家伙？？？</p>
<p>为什么空间占用差这么多？？？？</p>
<p>。。。。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第294期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-294-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-294-qi/">
        </link>
        <updated>2021-04-04T12:52:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>手机的寿命是人类的1/20，请放下身边的杂事，好好陪陪它！</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>佳节清明桃李笑，野田荒冢只生愁。<br>
——黄庭坚《清明》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>面具戴太久，就会长到脸上，再想揭下来，除非伤筋动骨扒皮。</p>
</blockquote>
<h1 id="清明">清明</h1>
<p>祭祖。</p>
<p>追思。</p>
<p>愿安好。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第293期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-293-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-293-qi/">
        </link>
        <updated>2021-04-03T12:50:22.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>出身好的努力是为了成功，而你是为了活下去。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>梨花风起正清明，游子寻春半出城。<br>
——吴惟信《苏堤清明即事》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>能够用自己喜欢的工作维持生活是件很幸福的事。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第292期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-292-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-292-qi/">
        </link>
        <updated>2021-04-02T12:46:38.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>我能想到最浪漫的事，就是和你一起吃吃吃，然后你付钱。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>好风胧月清明夜，碧砌红轩刺史家。<br>
——白居易《清明夜》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>虽然我和他已十年不见，但我知道我会永远怀念他。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第291期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-291-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-291-qi/">
        </link>
        <updated>2021-04-01T02:08:23.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>当你觉得又丑又穷的时候，不要悲伤，至少你的判断还是正确的。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>风暖鸟声碎，日高花影重。<br>
——杜荀鹤《春宫怨》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>Why so serious？</p>
</blockquote>
<h1 id="愚人节">愚人节</h1>
<p>愚人节快。。。</p>
<p>不对。。。</p>
]]></content>
    </entry>
</feed>