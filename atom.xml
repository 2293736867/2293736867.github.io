<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2020-09-06T09:53:19.264Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>我配不上你，
纵然很努力。</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[每日分享 第84期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-84-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-84-qi/">
        </link>
        <updated>2020-09-08T06:18:31.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>高考失败不要紧，以后还有更多的失败等着你。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>线虫（也被称为圆虫）的精子不会游泳，而是利用细胞骨架进行爬行。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>似初秋入夜，浅凉欺葛。<br>
——吴文英《满江红·翠幕深庭》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>荷尔蒙决定一见钟情，多巴胺决定天长地久。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1456443773">隔岸-姚六一</a></p>
</blockquote>
<blockquote>
<p>那一幕怎么忘记<br>
初次相遇的你<br>
路人闹挺挺看我滑稽<br>
为你一笑我愿做猴戏<br>
一生能有几序<br>
牵肠挂肚情义<br>
你大可不必猜忌寻觅<br>
我愿意一生为你追寻</p>
</blockquote>
<blockquote>
<p>就这般望着你<br>
难免我愁愁<br>
除你我禽鸟连花草<br>
成双荡悠悠<br>
你呀你冻我心房酸我眼眶一生的伤<br>
你呀你彼岸观望置身一旁一生两望</p>
</blockquote>
<blockquote>
<p>也有春花秋月<br>
也望相守不渝<br>
雨打荷叶吵吵了几滴<br>
又怎能熄灭心中柔情<br>
谈笑中提起你<br>
疼痛这般熟悉<br>
如今的你在何处飘零<br>
一片片破碎的心难拾起<br>
你我为何沦落这步田地</p>
</blockquote>
<blockquote>
<p>就这般望着你<br>
难免我愁愁<br>
除你我禽鸟连花草<br>
成双荡悠悠<br>
你呀你冻我心房酸我眼眶一生的伤<br>
你呀你彼岸观望置身一旁一生两望</p>
</blockquote>
<blockquote>
<p>穷极一生又何俱<br>
也许只是一个背影<br>
天亮之后就出行<br>
你又会在何处伫立<br>
是否也在等我的你<br>
回顾皆如草木<br>
唯你是青山<br>
嘲笑世间<br>
情难两得<br>
天作隔两岸<br>
你呀你冻我心房酸我眼眶一生的伤<br>
你呀你彼岸观望置身一旁一生两望</p>
</blockquote>
<blockquote>
<p>穷极一生又何俱<br>
也许只是一个背影<br>
天亮之后就出行<br>
在隔对岸等你</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第83期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-83-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-83-qi/">
        </link>
        <updated>2020-09-07T06:18:11.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>三观没用，你得靠五官。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>南太平洋中有一处航天器墓地。这个地方被称作尼莫点，是地球上距离陆地最遥远的地方。这里长眠着超过300个航天器和相关的太空垃圾，包括俄罗斯航空在地球轨道上组装的第一个空间站——和平号空间站</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>秋坐金张馆，繁阴昼不开。<br>
——李白《玉真公主别馆苦雨赠卫尉张卿二首》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>隔着人潮呼救像只困兽，呼吸颤抖去泪流，去相拥。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1443838552">他只是经过-h3R3 / Felix Bennett</a></p>
</blockquote>
<blockquote>
<p>他只是经过<br>
你的<br>
世界<br>
并没有停留<br>
只偶尔听说<br>
谁说<br>
关于他你又会触动<br>
眼泪又滴落<br>
闪动<br>
太多的话都变沉默<br>
你给的问候<br>
温柔<br>
所有都被一笔带过</p>
</blockquote>
<blockquote>
<p>他曾说的话有没有兑现<br>
他现在又站在谁的对面<br>
谁又让你站在暴雨中的街角淋个整夜<br>
曾陪他逛过的每个路口<br>
为何你停留不走<br>
低头想了很多<br>
每一句goobye goodnight<br>
慢慢推叠变成无奈<br>
他给的伤害<br>
还在<br>
变成噩梦你醒不来</p>
</blockquote>
<blockquote>
<p>他只是经过<br>
你的<br>
世界<br>
并没有停留<br>
只偶尔听说<br>
谁说<br>
关于他你又会触动</p>
</blockquote>
<blockquote>
<p>对他的思念day by day by day<br>
从他的口中全都变成一句无所谓<br>
为他而学着唱的情歌他早忘了<br>
但是还在你的播放列表里面排到前几位<br>
看他的现状谈了分了又合<br>
谁会在意你呢<br>
他早都忘了这也许对你是种折磨<br>
你所有的所有只剩下他一个<br>
可这种感受有谁能懂<br>
亲密的照片和留言全扔进垃圾桶<br>
谁又会来当你的树洞</p>
</blockquote>
<blockquote>
<p>他只是经过<br>
你的<br>
世界<br>
并没有停留<br>
只偶尔听说<br>
谁说<br>
关于他你又会触动<br>
眼泪又滴落<br>
闪动<br>
太多的话变成沉默<br>
你给的问候<br>
温柔<br>
所有都被一笔带过</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第82期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-82-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-82-qi/">
        </link>
        <updated>2020-09-06T06:17:16.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>同样都是咸鱼，为什么别人可以</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>埃菲尔铁塔在夏天时会“长”高，由于钢铁热胀冷缩的缘故，埃菲尔铁塔在夏天时会长高15公分。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>居人共住武陵源，还从物外起田园。<br>
——王维《桃源行》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>自己不经意的一句话，触动了别人的心。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1412005373">分开也是另一种明白-乔洋</a></p>
</blockquote>
<blockquote>
<p>彼此生活中穿梭<br>
要的其实并不多<br>
小心翼翼的保留承诺<br>
守护最后的寄托<br>
坏情绪总很脆弱<br>
像风席卷了荒漠<br>
你的冰冷我无法反驳<br>
给你理由去挣脱</p>
</blockquote>
<blockquote>
<p>分开也是另一种明白<br>
我们不应该相爱<br>
两个世界的人彼此伤害<br>
陷入无尽的深海<br>
分开也是另一种取代<br>
取代了我的悲哀<br>
离开你并没有醒过来<br>
在回忆爬不上来<br>
被深埋</p>
</blockquote>
<blockquote>
<p>彼此生活中穿梭<br>
要的其实并不多<br>
小心翼翼的保留承诺<br>
守护最后的寄托<br>
坏情绪总是很弱<br>
像风席卷了荒漠<br>
你的冰冷我无法反驳<br>
给你理由去挣脱</p>
</blockquote>
<blockquote>
<p>分开也是另一种明白<br>
我们不应该相爱<br>
两个世界的人彼此伤害<br>
陷入无尽的深海<br>
分开也是另一种取代<br>
取代了我的悲哀<br>
离开你并没有醒过来<br>
在回忆爬不上来<br>
被深埋</p>
</blockquote>
<blockquote>
<p>分开也是另一种明白<br>
我们不应该相爱<br>
两个世界的人彼此伤害<br>
陷入无尽的深海<br>
分开也是另一种取代<br>
取代了我的悲哀<br>
离开你并没有醒过来<br>
在回忆爬不上来<br>
被深埋</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring Boot demo系列（二）：简单三层架构Web应用]]></title>
        <id>https://2293736867.github.io/post/spring-boot-demo-xi-lie-er-jian-dan-san-ceng-jia-gou-web-ying-yong/</id>
        <link href="https://2293736867.github.io/post/spring-boot-demo-xi-lie-er-jian-dan-san-ceng-jia-gou-web-ying-yong/">
        </link>
        <updated>2020-09-06T06:09:34.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-概述">1 概述</h1>
<p>这是<code>Spring Boot</code>的第二个<code>Demo</code>，一个只有三层架构的极简<code>Web</code>应用，持久层使用的是<code>MyBatis</code>。</p>
<h1 id="2-架构">2 架构</h1>
<p>一个最简单的<code>Spring Boot Web</code>应用分为三层：</p>
<ul>
<li><code>Controller</code>层：负责具体业务流程的控制，调用<code>Service</code>层来控制业务逻辑</li>
<li><code>Service</code>层：业务逻辑层，真正执行业务的操作，比如获取用户信息等</li>
<li><code>Dao</code>层：负责数据持久化，在这一层中与各种数据库，比如<code>MySQL</code>、<code>Oracle</code>等打交道</li>
</ul>
<p>先来简单说一下三层所使用到的注解。</p>
<h2 id="21-controller层">2.1 <code>Controller</code>层</h2>
<p><code>Controller</code>层也是入口层，一般涉及如下注解：</p>
<ul>
<li><code>@Controller</code>：<code>@Controller</code>是经典的<code>Controller</code>层注解，<code>@Controller</code>标识的类代表该类是控制器类</li>
<li><code>@RequestMapping</code>：使用<code>@RequestMapping</code>可以对请求进行映射，可以注解在类上或者方法上，在类上的话表示该类所有的方法都是以该地址作为父地址，在方法上就表示可以映射对应的请求到该方法上</li>
<li><code>@GetMapping/@PostMapping</code>：这两者实际上是<code>@RequestMapping</code>对应不同方法的简化版，因为<code>@RequestMapping</code>有一个<code>method</code>属性，如果该<code>method</code>指定为<code>GET</code>那么就相当于<code>@GetMapping</code>，如果指定为<code>POST</code>就相当于<code>@PostMapping</code></li>
<li><code>@ResponseBody</code>：作用在方法上，将返回的数据进行可能的转换（取决于请求头，转换为<code>JSON</code>或<code>XML</code>等等，默认的情况下比如单纯字符串就直接返回），比如返回语句为<code>return &quot;success&quot;;</code>，如果加上了<code>@ResponseBody</code>就直接返回<code>success</code>，如果不加上就会跳转到<code>success.jsp</code>页面</li>
<li><code>@RequestParm</code>：处理<code>Contrent-Type</code>为<code>application/x-www-form-urlencoded</code>的内容，可以接受简单属性类型或者对象，支持<code>GET</code>+<code>POST</code></li>
<li><code>@RequestBody</code>：处理<code>Content-Type</code>不为<code>application/x-www-form-urlencoded</code>的内容（也就是需要指定<code>Content-Type</code>），不支持<code>GET</code>，只支持<code>POST</code></li>
<li><code>@PathVariable</code>：可以将占位符的参数传入方法参数，比如<code>/path/1</code>，可以将<code>1</code>传入方法参数中</li>
<li><code>@PathParm</code>：与<code>@RequestParm</code>一样，一般使用<code>@RequestParm</code></li>
<li><code>@RestController</code>：相当于<code>@Controller</code>+<code>@ResponseBody</code></li>
</ul>
<h2 id="22-service层">2.2 <code>Service</code>层</h2>
<p><code>Service</code>层用于执行主要的业务逻辑，主要就是下面这个注解：</p>
<ul>
<li><code>@Serice</code>：是一个增强型的<code>@Component</code>，<code>@Component</code>表示一个最普通的组件，可以被注入到<code>Spring</code>容器进行管理，而<code>@Service</code>是专门用于处理业务逻辑的注解，<code>@Controller</code>类似，也是一个增强型的<code>@Component</code>，专门用于<code>Controller</code>层的处理</li>
</ul>
<h2 id="23-dao层">2.3 <code>Dao</code>层</h2>
<p><code>Dao</code>是数据持久层，这里进行数据持久化的操作，一般加上<code>@Repository</code>即可：</p>
<ul>
<li><code>@Repository</code>：也是一个增强型的<code>@Component</code>，注解在持久层中，具有将具体数据库抛出的异常转为<code>Spring</code>持久层异常的功能</li>
</ul>
<p>讲完注解了下面就开始实践一下。</p>
<h1 id="3-实践">3 实践</h1>
<h2 id="31-新建项目">3.1 新建项目</h2>
<p>选择如下依赖：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200905184741142.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>Lombok</code>能简化代码，推荐使用，并且需要<code>IDEA</code>安装插件。<code>ORM</code>框架这里选择<code>MyBatis</code>。</p>
<h2 id="32-新建包">3.2 新建包</h2>
<p>新建如下四个包：</p>
<ul>
<li><code>controller</code></li>
<li><code>dao</code></li>
<li><code>entity</code></li>
<li><code>service</code></li>
<li><code>config</code></li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20200906022200803.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h2 id="33-controller层">3.3 <code>Controller</code>层</h2>
<h3 id="331-简单controller">3.3.1 简单<code>Controller</code></h3>
<p>在<code>controller</code>包下新建<code>Controller.java</code>：</p>
<pre><code class="language-java">@RestController
@RequestMapping(&quot;/&quot;)
public class Controller {
    @GetMapping(&quot;test&quot;)
    public String testMethod()
    {
        return &quot;test controller&quot;;
    }
}
</code></pre>
<p>运行之后，如果出现如下错误：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20200905225439985.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这是因为没有配置数据源，可以先把<code>MySQL</code>和<code>MyBatis</code>的依赖删去：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/2020090522555443.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>运行之后在浏览器输入<code>localhost:8080/test</code>会返回<code>test controller</code>：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20200905225642617.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样一个最简单的<code>Controller</code>就完成了。</p>
<h3 id="332-requestparm">3.3.2 <code>@RequestParm</code></h3>
<p>然后下一步是添加参数，可以考虑使用<code>@RequestParm</code>添加：</p>
<pre><code class="language-java">@GetMapping(&quot;withParm&quot;)
public String withParm(@RequestParam String id)
{
    return &quot;id:&quot;+id;
}
</code></pre>
<p>这样直接访问<code>localhost:8080/withParm</code>是不行的，因为没有携带<code>id</code>参数：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20200906000522328.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>加入参数即可，也就是<code>localhost:8080/withParm?id=1</code>：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20200906000605468.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h3 id="333-pathvariable">3.3.3 <code>@PathVariable</code></h3>
<p>另一种添加参数的方式是使用<code>@PathVariable</code>：</p>
<pre><code class="language-java">@GetMapping(&quot;path1/{id}&quot;)
public String path1(@PathVariable(&quot;id&quot;) String id)
{
    return &quot;id:&quot;+id;
}
</code></pre>
<p>这样不是加入<code>?id=xx</code>，而是直接加入占位符，比如<code>localhost:8080/path1/1</code>：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20200906000845532.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h3 id="334-完整curd">3.3.4 完整<code>CURD</code></h3>
<p>这里是一个完整的<code>CRUD</code>示例：</p>
<pre><code class="language-java">@RestController
@RequestMapping(&quot;/&quot;)
@CrossOrigin(&quot;http://localhost:3000&quot;)
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class CRUDController {
    private final Service service;

    @PostMapping(&quot;save&quot;)
    public boolean save(@RequestBody User user)
    {
        return service.save(user);
    }

    @GetMapping(&quot;delete&quot;)
    public boolean delete(@RequestParam String id)
    {
        return service.delete(id);
    }

    @GetMapping(&quot;select&quot;)
    public User select(@RequestParam String id)
    {
        return service.select(id);
    }

    @GetMapping(&quot;selectAll&quot;)
    public List&lt;User&gt; selectAll()
    {
        return service.selectAll();
    }

}
</code></pre>
<p>注解基本上都在上面说过了，除了下面两个：</p>
<ul>
<li><code>@RequiredArgsConstrutcor</code>：这个是<code>Lombok</code>的注解，用来消除直接使用<code>@Autowired</code>出现的警告</li>
<li><code>@CrossOrgin</code>：跨域注解，由于笔者使用<code>Postwoman</code>测试，默认运行端口为<code>3000</code>，因此需要加上该注解，使用<code>Postman</code>测试则不需要</li>
</ul>
<h2 id="34-service层">3.4 <code>Service</code>层</h2>
<pre><code class="language-java">@org.springframework.stereotype.Service
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
public class Service {
    private final UserMapper mapper;

    public boolean save(User user)
    {
        String id = user.getId();
        User currentUser = select(id);
        if(currentUser != null)
            return mapper.update(user) == 1;
        return mapper.insert(user) == 1;
    }

    public boolean delete(String id)
    {
        return mapper.deleteById(id) == 1;
    }

    public User select(String id)
    {
        return mapper.selectById(id);
    }

    public List&lt;User&gt; selectAll()
    {
        return mapper.selectAll();
    }
}
</code></pre>
<p>简单的<code>CRUD</code>，调用持久层的方法。</p>
<h2 id="35-dao层">3.5 <code>Dao</code>层</h2>
<p>由于使用<code>MyBatis</code>，这里的<code>Dao</code>层只有一个<code>Mapper</code>：</p>
<pre><code class="language-java">@Mapper
@Component
public interface UserMapper{
    @Select(&quot;select * from user where id=#{id}&quot;)
    User selectById(@Param(&quot;id&quot;) String id);

    @Select(&quot;select * from user&quot;)
    List&lt;User&gt; selectAll();

    int insert(@Param(&quot;user&quot;) User user);

    int deleteById(@Param(&quot;id&quot;) String id);

    int update(@Param(&quot;user&quot;) User user);
}
</code></pre>
<p><code>select</code>的<code>sql</code>直接写在了上面，剩下的<code>sql</code>语句写在了<code>xml</code>配置文件，另外<code>@Mapper</code>注解表示在编译后生成对应的接口实现类。</p>
<h2 id="36-实体类">3.6 实体类</h2>
<pre><code class="language-java">@Data
@AllArgsConstructor
public class User {
    private String id;
    private String username;
    private String password;
    @Override
    public String toString()
    {
        return &quot;id:&quot;+id+&quot;\n&quot;+&quot;username&quot;+username+&quot;\npassword&quot;+password+&quot;\n&quot;;
    }
}
</code></pre>
<h2 id="37-配置类">3.7 配置类</h2>
<pre><code class="language-java">@Configuration
@MapperScan(&quot;com.example.demo.dao&quot;)
public class MyBatisConfig {
}
</code></pre>
<ul>
<li><code>@Configuration</code>：定义为配置类</li>
<li><code>@MapperScan</code>：<code>@Mapper</code>的扫描路径</li>
</ul>
<h2 id="38-配置文件">3.8 配置文件</h2>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/20200906003818117.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>配置文件常用的有<code>properties</code>以及<code>yaml</code>，<code>yaml</code>格式更加简单，这里使用<code>yaml</code>格式：</p>
<pre><code class="language-yaml">spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/test
    username: test
    password: test

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mappers/*.xml
</code></pre>
<p>分别指定数据库链接，数据库用户名以及密码，还有下划线转驼峰命名以及<code>mapper</code>文件的位置。</p>
<p>另外还需要创建<code>UserMapper.xml</code>：</p>
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;
&lt;mapper namespace=&quot;com.example.demo.dao.UserMapper&quot;&gt;
    &lt;insert id=&quot;insert&quot;&gt;
        INSERT INTO `user` (`id`,`username`,`password`)
        VALUES (#{user.id},#{user.username},#{user.password})
    &lt;/insert&gt;

    &lt;update id=&quot;update&quot;&gt;
        UPDATE `user` set `username`=#{user.username} , `password`=#{user.password} where id=#{user.id}
    &lt;/update&gt;

    &lt;delete id=&quot;deleteById&quot;&gt;
        DELETE FROM `user` WHERE `id` = #{id}
    &lt;/delete&gt;
&lt;/mapper&gt;
</code></pre>
<p>就单纯的<code>sql</code>语句。</p>
<p>另外需要准备建表以及建用户的<code>sql</code>：</p>
<pre><code class="language-sql">CREATE DATABASE IF NOT EXISTS test;

CREATE USER IF NOT EXISTS 'test'@'localhost' IDENTIFIED BY 'test';

GRANT ALL ON test.* to 'test'@'localhost';

USE test;

CREATE TABLE user
(
    id char(10) primary key ,
    username varchar (30) not null,
    password varchar (30) not null
);
</code></pre>
<p>测试数据：</p>
<pre><code class="language-sql">USE test;
INSERT INTO user(id,username,password) values ('1','username1','password1'),('2','username2','password2');
</code></pre>
<p>最终配置文件如下：</p>
<figure data-type="image" tabindex="10"><img src="https://img-blog.csdnimg.cn/20200906021241990.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="4-其他准备">4 其他准备</h1>
<h2 id="41-建库建表建用户">4.1 建库建表建用户</h2>
<p>直接执行上面的脚本即可。</p>
<h2 id="42-开启服务">4.2 开启服务</h2>
<p>使用相应命令开启数据库服务。</p>
<h1 id="5-测试">5 测试</h1>
<h2 id="51-单元测试">5.1 单元测试</h2>
<p>修改一下自带的测试类即可：</p>
<pre><code class="language-java">@SpringBootTest
@RequiredArgsConstructor(onConstructor = @__(@Autowired))
class DemoApplicationTests {

    private final Service service;

    @Test
    void contextLoads() {
    }

    @Test
    void select()
    {
        System.out.println(service.select(&quot;1&quot;));
    }

    @Test
    void selectAll()
    {
        service.selectAll().forEach(System.out::println);
    }

//    @Test
//    void delete()
//    {
//        service.delete(&quot;3&quot;);
//    }

    @Test
    void save()
    {
        service.save(new User(&quot;3&quot;,&quot;username3&quot;,&quot;password3&quot;));
    }
}
</code></pre>
<figure data-type="image" tabindex="11"><img src="https://img-blog.csdnimg.cn/20200906021515598.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>直接点击左边的按钮即可运行，测试通过图如下：</p>
<figure data-type="image" tabindex="12"><img src="https://img-blog.csdnimg.cn/20200906021632644.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h2 id="52-浏览器测试">5.2 浏览器测试</h2>
<p>由于没有做前端，这里就使用<code>Postwoman</code>模拟前端测试：</p>
<figure data-type="image" tabindex="13"><img src="https://img-blog.csdnimg.cn/2020090602180490.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="14"><img src="https://img-blog.csdnimg.cn/20200906021835698.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="15"><img src="https://img-blog.csdnimg.cn/20200906021911642.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="16"><img src="https://img-blog.csdnimg.cn/20200906021957154.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-源码">6 源码</h1>
<p><code>Java</code>版：</p>
<ul>
<li><a href="https://github.com/2293736867/SpringBootDemoJava/tree/master/WebWithMyBatis">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/SpringBootDemoJava/tree/master/WebWithMyBatis/">码云</a></li>
</ul>
<p><code>Kotlin</code>版：</p>
<ul>
<li><a href="https://github.com/2293736867/SpringBootDemoKotlin/tree/master/WebWithMybatis">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/SpringBootDemoKotlin/tree/master/WebWithMybatis/">码云</a></li>
</ul>
<h1 id="7-参考">7 参考</h1>
<ul>
<li><a href="https://github.com/xkcoding/spring-boot-demo/tree/master/spring-boot-demo-orm-mybatis">Spring Boot Demo MyBatis</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring Boot demo系列（一）：Hello World]]></title>
        <id>https://2293736867.github.io/post/spring-boot-demo-xi-lie-yi-hello-world/</id>
        <link href="https://2293736867.github.io/post/spring-boot-demo-xi-lie-yi-hello-world/">
        </link>
        <updated>2020-09-06T06:07:06.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-新建工程">1 新建工程</h1>
<p>打开<code>IDEA</code>选择新建工程并选择<code>Spring Initializer</code>：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20200905140324635.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>可以在<code>Project JDK</code>处选择<code>JDK</code>版本，下一步是选择包名，语言，构建工具以及打包工具等，这里选择的是<code>Java</code>+<code>Maven</code>+<code>Jar</code>：</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20200905140357144.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>再下一步是选择依赖，一般来说<code>Spring Boot</code>应用都需要以下四个基础依赖：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20200905140624123.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>最后一步是填上工程名以及路径：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20200905140708654.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样一个<code>Demo</code>就完成了，项目结构如下：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20200905140955174.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="2-hello-world">2 Hello World</h1>
<p>在启动类输入即可：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20200905141703684.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>然后在可以点上面的绿色小三角运行，或者按<code>Shift+F10</code>，如果没有运行配置可以手动添加，点击<code>Edit Configurations</code>：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20200905141208708.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>选择<code>Spring Boot</code>：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20200905141241773.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>一般修改<code>Name</code>（配置名称）以及<code>Main class</code>（启动类）即可，开发环境中可以勾上<code>Enable debug output</code>以及<code>Hide banner</code>：</p>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/20200905141348803.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>然后就可以看到输出了：</p>
<figure data-type="image" tabindex="10"><img src="https://img-blog.csdnimg.cn/2020090514162368.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="3-源码">3 源码</h1>
<p><code>Java</code>版：</p>
<ul>
<li><a href="https://github.com/2293736867/SpringBootDemoJava">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/SpringBootDemoJava">码云</a></li>
</ul>
<p><code>Kotlin</code>版：</p>
<ul>
<li><a href="https://github.com/2293736867/SpringBootDemoKotlin">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/SpringBootDemoKotlin">码云</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第81期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-81-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-81-qi/">
        </link>
        <updated>2020-09-05T06:17:00.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>减肥，你想要坚持，但坚持不想要你。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>蜜蜂能够飞的比喜马拉雅山还要高。蜜蜂能够飞到海平面以上9000米的高度——比地球上的最高峰还要高。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>阴生古苔绿，色染秋烟碧。<br>
——李白《南轩松》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我一直注视着你，似近，似远。但你永远，看不见我......</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1466598056">Lemon-米津玄師</a></p>
</blockquote>
<blockquote>
<p>夢ならばどれほどよかったでしょう<br>
未だにあなたのことを夢にみる<br>
忘れた物を取りに帰るように<br>
古びた思い出の埃を払う<br>
戻らない幸せがあることを<br>
最後にあなたが教えてくれた<br>
言えずに隠してた昏い過去も<br>
あなたがいなきゃ永遠に昏いまま<br>
きっともうこれ以上 傷つくことなど<br>
ありはしないとわかっている<br>
あの日の悲しみさえ<br>
あの日の苦しみさえ<br>
そのすべてを愛してた あなたとともに<br>
胸に残り離れない<br>
苦いレモンの匂い<br>
雨が降り止むまでは帰れない<br>
今でもあなたはわたしの光<br>
暗闇であなたの背をなぞった<br>
その輪郭を鮮明に覚えている<br>
受け止めきれないものと出会うたび<br>
溢れてやまないのは涙だけ<br>
何をしていたの<br>
何を見ていたの<br>
わたしの知らない横顔で<br>
どこかであなたが今<br>
わたしと同じ様な<br>
涙にくれ 淋しさの中にいるなら<br>
わたしのことなどどうか 忘れてください<br>
そんなことを心から願うほどに<br>
今でもあなたはわたしの光<br>
自分が思うより 恋をしていたあなたに<br>
あれから思うように 息ができない<br>
あんなに側にいたのにまるで嘘みたい<br>
とても忘れられないそれだけが確か<br>
あの日の悲しみさえ<br>
あの日の苦しみさえ<br>
その全てを愛してたあなたと共に<br>
胸に残り離れない<br>
苦いレモンの匂い<br>
雨が降り止むまでは帰れない<br>
切り分けた果実の片方の様に<br>
今でもあなたはわたしの光</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第80期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-80-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-80-qi/">
        </link>
        <updated>2020-09-04T06:16:42.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>能用钱解决的都不是问题，但如何有钱，才是你最大的问题。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>鼻子很敏感的人能在下雨之前嗅到气息，这是由于大气中的化学物质发生反应并产生了臭氧，而臭氧具有刺鼻的香味。雷暴的下降气流将其从高空带到了人类鼻子的高度。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>一俯一仰一场笑，一江明月一江秋。<br>
——陈沆《一字诗》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>大力出奇迹，穹妹即正义。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://y.qq.com/n/yqq/album/004FzdJN2QG1e9.html">决斗场见-张韶涵</a></p>
</blockquote>
<blockquote>
<p>我们在羁绊试炼的决斗场上<br>
去战斗<br>
去对抗<br>
去较量<br>
梦想逆着风在绽放<br>
从不沮丧<br>
因为你始终<br>
在身旁<br>
抚摸<br>
手臂<br>
伤疤<br>
回想起每场厮杀<br>
伤痛<br>
终会<br>
结痂<br>
等待下一次反杀<br>
战胜困难和迷惘<br>
镀上倔强的目光<br>
真正强者总会欣赏对方<br>
全力战斗的模样</p>
</blockquote>
<blockquote>
<p>我们在羁绊试炼的决斗场上<br>
去战斗<br>
去对抗<br>
去较量<br>
梦想逆着风在绽放<br>
从不沮丧<br>
因为你始终在身旁<br>
面对<br>
嘲讽<br>
重创<br>
紧握最初的信仰<br>
攒下<br>
每份<br>
力量<br>
这里是我的主场<br>
藏起数不清的伤<br>
挺起坚强的胸膛<br>
这场战斗<br>
从开始到散场<br>
拼命也绝不退让</p>
</blockquote>
<blockquote>
<p>我们在羁绊试炼的决斗场上<br>
去战斗<br>
去对抗<br>
去较量<br>
梦想逆着风在绽放<br>
从不沮丧<br>
因为你始终<br>
在身旁<br>
不管一路上<br>
多少的跌跌撞撞<br>
就从这一刻<br>
重燃希望<br>
去战斗<br>
去对抗<br>
去较量<br>
梦想逆着风在绽放<br>
热泪盈眶<br>
宿命对决<br>
再战一场</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第79期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-79-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-79-qi/">
        </link>
        <updated>2020-09-03T06:05:38.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>情人节不出意外的话，一个人过，出意外的话在医院过。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>任天堂于1889年作为一家纸牌公司起家，多年来经营着一家名为“Daiya”的出租车公司以及一家按小时收费的“爱情旅馆”。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>画栏桂树悬秋香，三十六宫土花碧。<br>
——李贺《金铜仙人辞汉歌》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>经典之所以称为经典，因为它能经得起时间的考验。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=477913">ヨスガノソラ メインテーマ -遠い空へ-</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第78期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-78-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-78-qi/">
        </link>
        <updated>2020-09-02T06:05:18.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>友谊是什么？你智障多年，我不离不弃。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>《教父》一书的作者马里奥·普佐在将其改编成电影时，既没有经过正式培训，也从未写过剧本。在前两部电影获得两项奥斯卡奖之后，他才决定购买一本书学习如何当编剧。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>西风来劝凉云去，天东放开金镜。<br>
——史达祖《齐天乐·中秋宿真定驿》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>错过了就错过了，再追回来天色也不对。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=477982">Old Memory</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第77期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-77-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-77-qi/">
        </link>
        <updated>2020-09-01T10:33:21.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>毁灭友情的方式有许多，最彻底的一种是，借钱不还。</p>
</blockquote>
<h1 id="每日冷知识">每日冷知识</h1>
<blockquote>
<p>拉丁语中大约有800个淫秽字词，而英语中只有大约20个。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>风定落花深，帘外拥红堆雪。<br>
——李清照《好事近·风定落花深》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>日啖荔枝三百颗，不辞长作岭南人。</p>
</blockquote>
<h1 id="每日音乐">每日音乐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1474070455">分手跳跃-隔壁老樊</a></p>
</blockquote>
<blockquote>
<p>看你粉红色脸颊<br>
想带你回家<br>
陪你看一个完整的晚霞<br>
跟我走吧<br>
我们的旧照片<br>
不知道你还有没有<br>
那时还牵着你手<br>
把你当宇宙</p>
</blockquote>
<blockquote>
<p>我有多可怜<br>
站在原地没走<br>
像梦魇在梦游<br>
一个人很久<br>
我要陪你越过崇山峻岭之间的千万个沟壑<br>
我想陪你走遍世界各地<br>
和爱情搏一搏</p>
</blockquote>
<blockquote>
<p>我们在看星星<br>
看星星<br>
我们在谈输赢<br>
谈输赢<br>
谈输赢<br>
又如何<br>
我们都简单点<br>
简单点<br>
简单点<br>
一点点污浊<br>
就算没有你<br>
没有你<br>
没有你<br>
依然高冷色</p>
</blockquote>
<blockquote>
<p>看你粉红色脸颊<br>
想带你回家<br>
陪你看一个完整的晚霞<br>
跟我走吧<br>
我们的旧照片<br>
不知道你还有没有<br>
那时还牵着你手<br>
把你当宇宙</p>
</blockquote>
<blockquote>
<p>我们在看星星<br>
看星星<br>
看星星<br>
有几颗<br>
我们在谈输赢<br>
谈输赢<br>
谈输赢<br>
又如何<br>
我们都简单点<br>
简单点<br>
简单点<br>
一点点污浊<br>
就算没有你<br>
没有你<br>
没有你<br>
依然高冷色</p>
</blockquote>
<blockquote>
<p>我们在看风景<br>
看风景<br>
看风景<br>
讲性格<br>
你说这不安宁<br>
不安宁<br>
不安宁<br>
想求和<br>
最好还离别着<br>
离别着<br>
离别着<br>
都走了<br>
别靠近我<br>
靠近我<br>
靠近我<br>
别靠近我</p>
</blockquote>
<blockquote>
<p>别靠近我<br>
靠近我<br>
靠近我<br>
别靠近我</p>
</blockquote>
<h1 id="其他">其他</h1>
<p>今天9月1号了，开学了！！！！</p>
<p>冲冲冲！！！</p>
<p>ccc！！！</p>
]]></content>
    </entry>
</feed>