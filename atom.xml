<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2021-02-15T19:29:37.855Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>我配不上你，
纵然很努力。</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[ElementPlusViteStarterPnpm版本]]></title>
        <id>https://2293736867.github.io/post/elementplusvitestarterpnpm-ban-ben/</id>
        <link href="https://2293736867.github.io/post/elementplusvitestarterpnpm-ban-ben/">
        </link>
        <updated>2021-02-15T19:24:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-起因">1 起因</h1>
<p>由于最近<code>Vite</code>升级了2.x版本，项目中需要改动的东西有点多，本来想基于官方给出的<a href="https://github.com/element-plus/element-plus-vite-starter">starter</a>重做，但是又看到了一个叫<code>pnpm</code>的仓库，构建速度会比原生<code>npm/yarn</code>快两倍以上：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210216024507800.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>因此模仿官方starter做了一个<code>pnpm</code>版本的starter，希望能帮助到需要的同学。</p>
<h1 id="2-环境准备">2 环境准备</h1>
<ul>
<li><code>Node.js</code></li>
<li><code>npm</code></li>
<li><code>pnpm</code></li>
</ul>
<p><code>Node.js</code>与<code>npm</code>的安装就不说了，本来笔者使用的是<code>cnpm</code>，虽然速度上相比起<code>npm</code>有所改进，而且<code>cnpm</code>的输出也更加友好，但是使用了<code>pnpm</code>，相比起来感觉还是差了那么一点。</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210216024839751.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>安装<code>pnpm</code>之前，可以先把<code>cnpm</code>卸载（当然也可以选择不卸载）：</p>
<pre><code class="language-bash">npm uninstall -g cnpm
</code></pre>
<p>再设置一下淘宝镜像：</p>
<pre><code class="language-bash">npm config set registry https://registry.npm.taobao.org
</code></pre>
<p>然后安装<code>pnpm</code>（笔者系统<code>Manjaro</code>，<code>aur</code>已经提供了，可以直接<code>yay</code>安装）：</p>
<pre><code class="language-bash">yay -S pnpm
# 也可以使用npm安装
npm install -g pnpm
</code></pre>
<p>测试：</p>
<pre><code class="language-bash">pnpm -v
</code></pre>
<p>使用<code>pnpm</code>命令时，只需替换原生的<code>npm</code>命令即可，比如使用</p>
<pre><code class="language-bash">pnpm install
</code></pre>
<p>去代替</p>
<pre><code class="language-bash">npm install
</code></pre>
<p>同理<code>npx</code>的代替品是<code>pnpx</code>。</p>
<h1 id="3-初始化">3 初始化</h1>
<p>基于<a href="https://vitejs.dev/guide/">Vite Getting Started</a>文档，输入</p>
<pre><code class="language-bash">pnpm init @vitejs/app
</code></pre>
<p>接着输入项目名字，并选择模板：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210216025554661.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>默认提供的模板如图所示，选择完成后即可。</p>
<p>也可以一步创建完成：</p>
<pre><code class="language-bash">pnpm init @vitejs/app my-vue-app --template vue
</code></pre>
<p>接着安装依赖：</p>
<pre><code class="language-bash">pnpm install 
pnpm install --save element-plus
</code></pre>
<p>这样就完成了初始化工作，项目结构如下：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210216030013804.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="4-引入elementplus">4 引入<code>ElementPlus</code></h1>
<p>按照<a href="https://element-plus.gitee.io/#/zh-CN/component/installation">ElementPlus</a>文档引入，修改<code>main.js</code>如下：</p>
<pre><code class="language-js">import { createApp } from 'vue'
import App from './App.vue'
import ElementPlus from 'element-plus'
import 'element-plus/lib/theme-chalk/index.css'

createApp(App).use(ElementPlus).mount('#app')
</code></pre>
<p>将以下图片覆盖<code>logo.png</code>：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210216030316778.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>下一步就是修改<code>HelloWorld.vue</code>中的<code>button</code>，并把<code>&lt;h1&gt;</code>下面的<code>&lt;p&gt;</code>注释掉：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210216031129947.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>最后修改<code>App.vue</code>，改动其中的<code>&lt;image&gt;</code>大小，以及<code>&lt;HelloWorld&gt;</code>中的标题文字：</p>
<pre><code class="language-html">&lt;template&gt;
  &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot; id=&quot;img&quot;/&gt;
  &lt;HelloWorld msg=&quot;Hello Vue 3.0 + Element Plus + Vite + pnpm&quot; /&gt;
&lt;/template&gt;

&lt;script setup&gt;
import HelloWorld from './components/HelloWorld.vue'

&lt;/script&gt;

&lt;style&gt;
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
#img{
  width: 50%;
}
&lt;/style&gt;
</code></pre>
<h1 id="5-运行">5 运行</h1>
<p>终端运行可以直接输入<code>vite</code>即可，需要制定端口可以修改为<code>vite --port xxxx</code>，<code>WebStorm</code>运行建议先添加一个<code>npm</code>运行配置：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20210216031011815.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>左边是自制的starter，右边是官方的，可以看到基本一致：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/2021021603124533.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-源码">6 源码</h1>
<ul>
<li><a href="https://github.com/2293736867/ElementPlusViteStarterPnpm">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/ElementPlusViteStarterPnpm">码云</a></li>
<li><a href="https://codechina.csdn.net/qq_27525611/ElementPlusViteStarterPnpm">CODECHINA</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第247期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-247-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-247-qi/">
        </link>
        <updated>2021-02-15T17:33:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>夜撩了酒，酒撩了你，你撩了我，穷困潦倒了我们。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>危楼高百尺，手可摘星辰。<br>
——李白《夜宿山寺》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>忘却并不是可怕的，而是你不肯。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第246期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-246-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-246-qi/">
        </link>
        <updated>2021-02-14T17:31:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>爱一个人一定要告诉她，那样你才会知道，她有多讨厌你。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>老去秋风吹我恶，梦回寒月照人孤。<br>
——文天祥《金陵驿二首》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>幸运的人一生都在被童年治愈，不幸的人一生都在治愈童年。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第245期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-245-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-245-qi/">
        </link>
        <updated>2021-02-13T16:19:01.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你喜欢我哪一点啊？我喜欢你离我远一点。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>君在阴兮影不见，君依光兮妾所愿。<br>
——傅玄《车遥遥篇》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>那随风飘荡的蒲公英种子，会在什么时候决定自己的命运呢？</p>
</blockquote>
<h1 id="情人节快乐啊">情人节快乐啊！</h1>
<p>又是一个虐狗的节日。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人生第一个扩展——Github1s]]></title>
        <id>https://2293736867.github.io/post/ren-sheng-di-yi-ge-kuo-zhan-github1s/</id>
        <link href="https://2293736867.github.io/post/ren-sheng-di-yi-ge-kuo-zhan-github1s/">
        </link>
        <updated>2021-02-13T05:34:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-灵感">1 灵感</h1>
<p>某天看到了一个叫<a href="https://github.com/conwnet/github1s">github1s</a>的仓库：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210213100150724.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>基于<code>Node.JS</code>、<code>Yarn</code>、<code>Python</code>等技术栈，在<code>github.com</code>上面加上“一秒”，也就是<code>github1s.com</code>，就能在<code>VSCode</code>中打开该仓库，非常好用。</p>
<p>同时笔者安装有一个叫<code>Sourcegraph</code>的扩展，就是下面这个：</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210213100435129.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>用过的同学都知道这个扩展是干嘛的，于是笔者就想类似的在这个扩展旁边加一个超链接的扩展直接打开<code>github1s.com</code>，效果图已经在上面了，点击那个<code>VSCode</code>的图标就可以直接打开。</p>
<h1 id="2-动手">2 动手</h1>
<p>由于笔者并没有扩展开发的经验，因此先去看了一下<code>Chrome</code>扩展开发的文档并留下了一篇<a href="https://blog.csdn.net/qq_27525611/article/details/113791799">基础教程博客</a>，然后就可以开始动手了，项目结构如下：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210213101228391.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="3-图标">3 图标</h1>
<p>关于图标，其实是花了一点时间的，比如，受到<a href="https://github.com/bestony/logoly">该仓库</a>的影响，一开始定的图标是下面这样子的：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210213101431248.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>然后想了一下好像不太对劲，就改成了这样子的：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210213101502695.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>至于在扩展管理中显示的图片，改成了一个比较简单的：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210213101556477.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样图标的问题就解决了。</p>
<h1 id="4-显示">4 显示</h1>
<p>下一步就是添加功能到扩展中并且让其显示在<code>Sourcegraph</code>的旁边，首先<code>manifest.json</code>如下：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;Github1s&quot;,
    &quot;description&quot;: &quot;One second to read GitHub code with VS Code.(https://github.com/conwnet/github1s)&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3,
    &quot;content_scripts&quot;: [{
        &quot;matches&quot;: [&quot;https://github.com/*/*&quot;],
        &quot;js&quot;: [&quot;/js/icon.js&quot;,&quot;/js/init.js&quot;]
    }],
    &quot;action&quot;: {
        &quot;default_icon&quot;: {
            &quot;16&quot;: &quot;/icons/logo16.png&quot;,
            &quot;32&quot;: &quot;/icons/logo32.png&quot;,
            &quot;48&quot;: &quot;/icons/logo48.png&quot;,
            &quot;128&quot;: &quot;/icons/logo128.png&quot;
        }
    },
    &quot;icons&quot;: {
        &quot;16&quot;: &quot;/icons/logo16.png&quot;,
        &quot;32&quot;: &quot;/icons/logo32.png&quot;,
        &quot;48&quot;: &quot;/icons/logo48.png&quot;,
        &quot;128&quot;: &quot;/icons/logo128.png&quot;
    }
}
</code></pre>
<p>解释一下<code>content_scripts</code>，当匹配到<code>matches</code>中的<code>URL</code>时，便会自动执行<code>js</code>里面的脚本，先来看一下<code>init.js</code>，这个脚本的作用就是添加把图标添加到<code>Sourcegraph</code>的旁边：</p>
<pre><code class="language-js">let list = document.getElementsByClassName(&quot;pagehead-actions&quot;)

if (list.length &gt; 0) {
    list = list[0]
    const li = document.createElement('li')
    const a = document.createElement('a')

    a.href = 'https://github1s.com/' + window.location.href.split('github.com')[1]
    a.target = '_black'
    a.className = 'btn btn-sm tooltipped tooltipped-s'
    a.style.height = '28px'
    a.style.paddingBottom = '0'
    a.style.paddingTop = '2px'
    a.innerHTML = base64Logo
    a.setAttribute('aria-label','Open with VSCode')

    li.append(a)
    list.insertBefore(li, list.getElementsByTagName(&quot;li&quot;)[0])
}
</code></pre>
<p>因为看了一下这里的代码：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/20210213102148821.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>就是一个<code>&lt;ul&gt;</code>包含<code>&lt;li&gt;</code>，于是就手动添加了一个<code>&lt;li&gt;</code>，里面包含一个<code>&lt;a&gt;</code>，加上样式、超链接以及一个叫<code>ariaLabel</code>的属性，这个属性会在光标悬浮的时候显示：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20210213102326903.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/20210213102423911.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样功能就实现了，剩下的问题就是图标的显示，因为不能直接插入图片：</p>
<pre><code class="language-js">a.innerHTML = '&lt;img src=&quot;/icons/code20.png&quot;&gt;'
</code></pre>
<p>因为这样会被解析成：</p>
<pre><code class="language-html">&lt;img src=&quot;https://github.com/icons/code20.png&quot;&gt;
</code></pre>
<p>另外也考虑到缩放的问题，因此采用了<code>base64</code>+<code>svg</code>显示：</p>
<figure data-type="image" tabindex="10"><img src="https://img-blog.csdnimg.cn/20210213102750335.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样扩展就开发完成了。</p>
<h1 id="5-测试">5 测试</h1>
<p>测试环境：</p>
<ul>
<li><code>Chrome 88.0.4324.150</code></li>
<li><code>Chromium 88.0.4324.150</code></li>
<li><code>Brave 1.19.92</code></li>
<li><code>FireFox 85.0.1</code></li>
</ul>
<p>安装的时候开启开发者模式，选择<code>Load unpacked</code>即可。火狐的话打开<code>about:debugging#/runtime/this-firefox</code>，选择<code>Load Temporary Add-on</code>，接着选择<code>manifest.json</code>即可。</p>
<p><code>Brave</code>测试：</p>
<figure data-type="image" tabindex="11"><img src="https://img-blog.csdnimg.cn/20210213113036762.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>Chrome</code>测试：</p>
<figure data-type="image" tabindex="12"><img src="https://img-blog.csdnimg.cn/20210213113141665.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>Chromium</code>测试：</p>
<figure data-type="image" tabindex="13"><img src="https://img-blog.csdnimg.cn/20210213113247658.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p><code>FireFox</code>测试失败，因为目前版本（<code>85.0.1</code>）不支持<code>Manifest V3</code>，只支持<code>Manifest V2</code>，修改为<code>V2</code>版本后成功：</p>
<figure data-type="image" tabindex="14"><img src="https://img-blog.csdnimg.cn/20210213113518283.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-关于firefox">6 关于<code>FireFox</code></h1>
<p>上面也说了目前<code>FireFox</code>不支持<code>Manifest V3</code>版本，因此如果需要使用<code>Manifest V2</code>版本，两者比较可以参考<a href="https://developer.chrome.com/docs/extensions/mv3/intro/mv3-migration/">官方文档</a>。</p>
<h1 id="7-发布">7 发布</h1>
<p>发布很简单，扩展管理页面选择<code>Pack Extension</code>即可。</p>
<p>如果需要发布到<code>Chrome Web Store</code>，需要注册成为<code>Chrome</code>网上应用商店开发者，可以参考<a href="https://developer.chrome.com/docs/extensions/mv3/hosting/">官方文档</a>。</p>
<h1 id="8-源码">8 源码</h1>
<ul>
<li><a href="https://github.com/2293736867/Github1sExtension">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/Github1sExtension">码云</a></li>
<li><a href="https://codechina.csdn.net/qq_27525611/Github1sExtension">CODECHINA</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第244期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-244-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-244-qi/">
        </link>
        <updated>2021-02-13T02:49:43.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>你这么擅长安慰他人，一定度过了许多，自己安慰自己的日子吧。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>乡心新岁切，天畔独潸然。<br>
——刘长卿《新年作》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>永远别放弃一个每天都在想念的人。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chrome扩展开发基础教程（附HelloWorld）]]></title>
        <id>https://2293736867.github.io/post/chrome-kuo-zhan-kai-fa-ji-chu-jiao-cheng-fu-helloworld/</id>
        <link href="https://2293736867.github.io/post/chrome-kuo-zhan-kai-fa-ji-chu-jiao-cheng-fu-helloworld/">
        </link>
        <updated>2021-02-12T12:15:20.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-概述">1 概述</h1>
<p><code>Chrome</code>扩展开发的基础教程，代码基于原生<code>JS+H5</code>，教程内容基于谷歌扩展开发<a href="https://developer.chrome.com/docs/extensions/mv3/getstarted/">官方文档</a>。</p>
<h1 id="2-环境">2 环境</h1>
<ul>
<li><code>Chrome 88.0.4324.96</code></li>
<li><code>Chromium 87.0.4280.141</code></li>
<li><code>Brave 1.19.84</code></li>
<li><code>FireFox 85.0</code></li>
<li><code>WebStorm 2020.3.2</code></li>
<li><code>Manifest V3</code></li>
</ul>
<h1 id="3-开发环境准备">3 开发环境准备</h1>
<p>开发扩展建议使用<code>WebStorm</code>，推荐<code>WebStorm</code>的原因是能够补全，在设置中的<code>Libraries</code>中可以下载<code>chrome</code>的库，这样就能够补全了：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210211204114366.png" alt="在这里插入图片描述" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210212015801882.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>另一个建议使用的是<code>VSCode</code>，但是笔者目前没有找到让<code>VSCode</code>补全的方式，希望知道的可以在评论指出补充一下。</p>
<p>当然其实扩展开发并没有规定使用哪一个<code>IDE</code>，常用的<code>Web</code>开发<code>IDE</code>比如<code>HBuilder</code>也是可以的，看个人喜好了。</p>
<h1 id="4-创建manifestjson">4 创建<code>manifest.json</code></h1>
<p>首先创建一个空白文件夹：</p>
<pre><code class="language-bash">mkdir FirstExtension
cd FirstExtension
</code></pre>
<p>接着创建一个叫<code>manifest.json</code>的文件，直接在<code>WebStorm</code>中创建即可，文件内容如下：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;First Extension&quot;,
    &quot;description&quot;: &quot;This is my first extension&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3
}
</code></pre>
<p>打开浏览器进入管理扩展程序，并开启开发者模式，选择<code>Load unpacked</code>，打开刚才创建的<code>FirstExtension</code>文件夹：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210212021125773.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这样就可以看到扩展了。</p>
<p>事实上最简单的扩展只需要一个<code>manifest.json</code>，来描述扩展最基本的一些属性以及行为，因此这样就算完成HelloWorld了。</p>
<h1 id="5-添加弹出界面">5 添加弹出界面</h1>
<p>现在扩展什么界面也没有，现在可以尝试着给扩展添加一个点击就弹出的界面，首先修改<code>manifest.json</code>，添加<code>action</code>：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;First Extension&quot;,
    &quot;description&quot;: &quot;This is my first extension&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3,
    &quot;action&quot;: {
        &quot;default_popup&quot;: &quot;popup.html&quot;
    }
}
</code></pre>
<p>在与<code>manifest.json</code>同级目录下创建<code>popup.html</code>文件：</p>
<pre><code class="language-html">&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;Hello World!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>这样点击扩展就会弹出对应文字了：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210212145215388.gif" alt="在这里插入图片描述" loading="lazy"></figure>
<h1 id="6-添加图标">6 添加图标</h1>
<p>在<code>manifest.json</code>中添加<code>icons</code>字段：</p>
<pre><code class="language-json">{
    &quot;name&quot;: &quot;First Extension&quot;,
    &quot;description&quot;: &quot;This is my first extension&quot;,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;manifest_version&quot;: 3,
    &quot;action&quot;: {
        &quot;default_popup&quot;: &quot;popup.html&quot;
    },
    &quot;icons&quot;: {
        &quot;16&quot;: &quot;icons/16.png&quot;,
        &quot;32&quot;: &quot;icons/32.png&quot;,
        &quot;48&quot;: &quot;icons/48.png&quot;,
        &quot;128&quot;: &quot;icons/128.png&quot;
    }
}
</code></pre>
<p>图标文件可以从文末的源码处获取，重新加载后就可以看到扩展的图标改变了。</p>
<p>图标一共有四个，<code>16*16</code>是扩展页面中显示的图标：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210212145824197.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>而<code>32*32</code>是可选的，为了防止从<code>48*48</code>的大小中缩小造成失真，<code>48*48</code>是在扩展管理页面中显示的，例如：</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210212145602728.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>而<code>128*128</code>是<code>Chrome Web Store</code>中显示的。</p>
<h1 id="7-发布">7 发布</h1>
<p>最后一步是发布，扩展有两种安装方式，一种是通过本地安装，一种是通过<code>Chrome Web Store</code>安装，使用后一种方式的话，需要注册成为<code>Chrome</code>网上应用开发者：</p>
<figure data-type="image" tabindex="7"><img src="https://img-blog.csdnimg.cn/2021021215045827.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>这里为了方便就本地打包发布了，在插件管理页面选择<code>Pack extension</code>：</p>
<figure data-type="image" tabindex="8"><img src="https://img-blog.csdnimg.cn/20210212150700581.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>选择包含了<code>manifest.json</code>的文件夹，在这里就是刚才创建的<code>FirstExtension</code>：</p>
<figure data-type="image" tabindex="9"><img src="https://img-blog.csdnimg.cn/2021021215080146.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>点击打包后，会出现两个文件：</p>
<figure data-type="image" tabindex="10"><img src="https://img-blog.csdnimg.cn/20210212150957128.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>一个是<code>crx</code>，就是扩展的打包文件，一个是<code>pem</code>，创建新版本的扩展时需要使用。</p>
<p>浏览器中拖拽<code>crx</code>文件就可以安装了，一般来说<code>Chrome/Chromium/Brave</code>因为基于相同内核应该都不会出现问题，至于<code>FireFox</code>，可以参考一下文末的附录。</p>
<h1 id="8-源码">8 源码</h1>
<ul>
<li><a href="https://github.com/2293736867/FirstExtension">Github</a></li>
<li><a href="https://gitee.com/u6b7b5fc3/FirstExtension">码云</a></li>
<li><a href="https://codechina.csdn.net/qq_27525611/FirstExtension">CODECHINA</a></li>
</ul>
<h1 id="9-附录firefox">9 附录：<code>FireFox</code></h1>
<p><code>FireFox</code>目前最新版本（<code>85.0</code>）的扩展目前不支持<code>Manifest V3</code>，因此如果需要开发<code>FireFox</code>扩展，需要使用<code>Manifest V2</code>版本，也就是：</p>
<pre><code class="language-json">&quot;manifest_version&quot;: 2
</code></pre>
<p>当然还有一些字段上的区别，具体可以参考<a href="https://developer.chrome.com/docs/extensions/mv3/intro/mv3-migration/">这里</a>的文档。</p>
<p>另外笔者测试了一下<code>FireFox</code>安装这个<code>Demo</code>扩展好像不能直接拖拽<code>crx</code>文件，需要打开一个叫<code>about:debugging</code>的链接，在设置中选择<code>Load Temporary Add-on</code>:</p>
<figure data-type="image" tabindex="11"><img src="https://img-blog.csdnimg.cn/20210212200931560.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>选择<code>manifest.json</code>文件即可安装。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第243期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-243-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-243-qi/">
        </link>
        <updated>2021-02-12T02:33:35.000Z</updated>
        <content type="html"><![CDATA[<h1 id="新年快乐">新年快乐！！！</h1>
<p>新的一年祝大家心想事成，万事如意！</p>
<p><s>本来想在公众号写篇文章的，但是。。。</s></p>
<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>别看我平时对你漠不关心，其实背后有说你好多坏话的。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>入春才七日，离家已二年。<br>
——薛道衡《人日思归》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我的一生，无怨无悔！</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第242期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-242-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-242-qi/">
        </link>
        <updated>2021-02-11T02:35:44.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>其实人生，在某个节点后就结束了，大家只是在等彩蛋。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>美人兮美人，不知为暮雨兮为朝云。<br>
——卢仝《有所思》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>超过一定的年龄之后，所谓人生，无非就是一个不断丧失的过程而已。</p>
</blockquote>
<h1 id="音乐推荐">音乐推荐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1808492017">艾辰——《错位时空》</a></p>
</blockquote>
<blockquote>
<p>填不满<br>
半排观众的电影<br>
直到<br>
散场时突然亮起灯<br>
字幕定格在某某出品和发行<br>
我目送<br>
他们行色匆匆</p>
</blockquote>
<blockquote>
<p>像个<br>
自不量力的复读生<br>
完不成<br>
金榜题名的使命<br>
命不是猜剪刀石头布的决定<br>
那么任性</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
那我们算不算<br>
相拥<br>
可如梦初醒般的两手空空<br>
心也空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
是否看过同样<br>
风景<br>
像扰乱时差留在错位时空<br>
终是空<br>
是空</p>
</blockquote>
<blockquote>
<p>数不完<br>
见证许愿的繁星<br>
没灵验<br>
谁来安慰坏心情<br>
十字路口闪烁不停的信号灯<br>
有个人<br>
显然心事重重</p>
</blockquote>
<blockquote>
<p>三个字<br>
只能说给自己听<br>
仰着头<br>
不要让眼泪是空<br>
哪里有可以峰回路转的宿命<br>
我<br>
不想听</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
那我们算不算相拥<br>
可如梦初醒般的两手空空<br>
心也空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
是否看过同样<br>
风景<br>
像扰乱时差留在错位时空<br>
终是空<br>
是空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
空气里弥漫着<br>
心痛<br>
可我们最后在这错位时空<br>
终成空</p>
</blockquote>
<blockquote>
<p>我吹过你吹过的晚风<br>
空气里弥漫着心痛<br>
可我们最后在这错位时空<br>
终成空<br>
成空</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第241期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-241-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-241-qi/">
        </link>
        <updated>2021-02-10T02:33:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>我丑，是为了降低画质提高性能，为什么我的人生还那么卡呢？</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>迟日催花，淡云阁雨，轻寒轻暖。<br>
——陈亮《水龙吟·春恨》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>就算风吹散了冰雪，想念也会留存下来。</p>
</blockquote>
]]></content>
    </entry>
</feed>