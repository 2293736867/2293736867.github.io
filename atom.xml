<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://2293736867.github.io</id>
    <title>氷泠&apos;s blog</title>
    <updated>2021-03-16T06:22:29.333Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://2293736867.github.io"/>
    <link rel="self" href="https://2293736867.github.io/atom.xml"/>
    <subtitle>我配不上你，
纵然很努力。</subtitle>
    <logo>https://2293736867.github.io/images/avatar.png</logo>
    <icon>https://2293736867.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 氷泠&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[Github Pages+Gridea设置DisqusJS评论]]></title>
        <id>https://2293736867.github.io/post/github-pagesgridea-she-zhi-disqusjs-ping-lun/</id>
        <link href="https://2293736867.github.io/post/github-pagesgridea-she-zhi-disqusjs-ping-lun/">
        </link>
        <updated>2021-03-16T06:08:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-前言">1 前言</h1>
<p>相信很多人都对<code>Github Pages</code>不默认，笔者之前写过了一篇文章，使用<code>Github Pages</code>去搭建博客的，链接可以<a href="https://blog.csdn.net/qq_27525611/article/details/104885163">戳这里</a>。</p>
<p>但是唯一的不足是没有提到评论，因为当时笔者测试了一下，评论设置不成功，而这个问题，在今天终于解决了。</p>
<h1 id="2-gitalkdisqus">2 <code>Gitalk</code>/<code>Disqus</code></h1>
<p><code>Gridea</code>支持两种评论的<code>API</code>：</p>
<ul>
<li><code>Gitalk</code></li>
<li><code>Disqus</code></li>
</ul>
<p>因为网上大部分的教程都是<code>Gitalk</code>的，所以这里写一篇<code>Disqus</code>的。</p>
<h1 id="3-具体流程">3 具体流程</h1>
<p>首先去<a href="https://disqus.com/api/applications/">官网</a>注册获取<code>key</code>：</p>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210316140207918.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>填上标签，以及自己的<code>Github Pages</code>网站，描述以及组织可以不同填：</p>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210316140225442.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>注册之后就可以看到自己的<code>key</code>：</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/20210316140452887.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>先复制这个<code>key</code>，然后在<code>settings</code>中设置自己的仓库名（<code>https://username.github.io</code>）：</p>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210316140555739.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>完成之后打开<code>Gridea</code>，复制刚才的<code>key</code>到<code>Comment Setting</code>中<code>apikey</code>即可，其他可以留空：</p>
<figure data-type="image" tabindex="5"><img src="https://img-blog.csdnimg.cn/20210316140422245.png" alt="在这里插入图片描述" loading="lazy"></figure>
<p>同步完成后就可以测试了。</p>
<figure data-type="image" tabindex="6"><img src="https://img-blog.csdnimg.cn/20210316140815271.png" alt="在这里插入图片描述" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第275期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-275-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-275-qi/">
        </link>
        <updated>2021-03-16T04:22:00.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>活了这么多年，我一直搞不明白一件事，拉钩为什么要上吊？</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>风透春衫，雨透春衫。<br>
——佚名《一剪梅·漠漠春阴酒半酣》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>失去人性，失去很多，失去兽性，失去一切。</p>
</blockquote>
<h1 id="关于前几期的延更">关于前几期的延更</h1>
<p>因为更换域名了，不知道是<code>Gridea</code>的问题还是<code>Github Pages</code>的问题，总是<code>sync</code>失败，也有可能是<code>DNS</code>的原因。</p>
<p>现在浏览器的缓存已经更新可以正常访问新域名<code>bingling.fun</code>了。</p>
<h1 id="音乐推荐">音乐推荐</h1>
<blockquote>
<p><a href="https://music.163.com/#/song?id=1811408619">关机又关机——YangYang</a></p>
</blockquote>
<blockquote>
<p>你一直在我身边 哪怕我一无所有<br>
你说只要我爱你 你就别无所求<br>
看着你的照片 我的悲伤<br>
以为学会伪装 就不会受伤<br>
还是会想你 特别是晚上<br>
拨不通电话 我跟谁讲</p>
</blockquote>
<blockquote>
<p>你一直在我身边 哪怕我一无所有<br>
你说只要我爱你 你就别无所求<br>
看着你的照片 我的悲伤<br>
还是会想你 特别是晚上<br>
拨不通电话 我跟谁讲</p>
</blockquote>
<blockquote>
<p>为什么<br>
关机又关机<br>
对不起请关机<br>
我漫无目的<br>
我总是力不从心<br>
这次又关机又关机<br>
我焦急想过也放弃<br>
18818<br>
电话还要不要打</p>
</blockquote>
<blockquote>
<p>so 你不在<br>
我走开<br>
哎咦耶咦耶<br>
怎么人心让你受委屈<br>
烦恼不断哎咦耶咦耶<br>
不相信<br>
这是命<br>
哎咦耶咦耶<br>
还没给你发完的短信<br>
被我藏在手机哎咦耶</p>
</blockquote>
<blockquote>
<p>你知道我的脾气嘛<br>
吵架我从不回头<br>
I got 大男子主义<br>
谢谢你给予我的包容<br>
我爱你这句话我说了三万七千多遍<br>
我的爱我的爱我的爱我的爱就像真金不怕火炼<br>
如果非要做个比喻<br>
离开我我会死去<br>
才不管三七21 nobody can fun with me<br>
我讨厌你的前任<br>
因为他根本不配<br>
对不对<br>
只有我才懂得你的珍贵</p>
</blockquote>
<blockquote>
<p>你一直在我身边<br>
哪怕我一无所有<br>
你说只要我爱你<br>
你就别无所求<br>
看着你的照片<br>
我的悲伤<br>
以为学会伪装<br>
就不会受伤<br>
还是会想你<br>
特别是晚上<br>
拨不通电话<br>
我跟谁讲</p>
</blockquote>
<blockquote>
<p>为什么<br>
关机又关机<br>
对不起<br>
请关机<br>
我漫无目的<br>
我总是力不从心<br>
这次又关机又关机<br>
我焦急过想过也放弃<br>
18818<br>
电话还要不要打</p>
</blockquote>
<blockquote>
<p>打你 电话 没说够<br>
我们 的心 被伤透<br>
其实不想让你走<br>
I can't never let you go<br>
go go go<br>
相信你也肯定懂<br>
如果你是真的懂</p>
</blockquote>
<blockquote>
<p>I feel so sad</p>
</blockquote>
<blockquote>
<p>I feel so sad</p>
</blockquote>
<blockquote>
<p>你不在</p>
</blockquote>
<blockquote>
<p>还是会想你<br>
特别是晚上<br>
拨不通电话<br>
我跟谁讲</p>
</blockquote>
<blockquote>
<p>为什么<br>
关机又关机<br>
对不起<br>
请关机<br>
我漫无目的<br>
我总是力不从心<br>
我焦急想过也放弃<br>
18818<br>
电话还要不要打</p>
</blockquote>
<blockquote>
<p>你一直在我身边<br>
哪怕我一无所有<br>
你说只要我爱你<br>
那就别无所求<br>
看着你的照片<br>
我的悲伤<br>
以为学会伪装<br>
就不会受伤<br>
还是会想你<br>
特别是晚上<br>
拨不通电话<br>
我跟谁讲</p>
</blockquote>
<h1 id="关于博客标签云的颜色">关于博客标签云的颜色</h1>
<p>一开始是这样的：</p>
<figure data-type="image" tabindex="1"><img src="https://2293736867.github.io/post-images/1615872139143.png" alt="" loading="lazy"></figure>
<p>查了一下代码，在<code>assets/styles/main.less</code>下配置的颜色：</p>
<figure data-type="image" tabindex="2"><img src="https://2293736867.github.io/post-images/1615872189593.png" alt="" loading="lazy"></figure>
<p>本来以为是自动随机生成的颜色，没想到是作者固定了颜色，而且只固定28个，也就是<code>a.ctag-0</code>-<code>a.ctag-27</code>，而<code>HTML</code>的代码如下：</p>
<figure data-type="image" tabindex="3"><img src="https://2293736867.github.io/post-images/1615872300144.png" alt="" loading="lazy"></figure>
<p>用的是<code>ejs</code>，笔者不会<code>ejs</code>，本来想给剩下的标签加上随机颜色，但是尝试了一下把其中的<code>ctag-&lt;%= tagIndex %&gt;</code>删除，最后的<code>H5</code>还是带有<code>ctag-xx</code>，尝试了一下强制加<code>style=&quot;background&quot;</code>也没有效果。</p>
<p>没办法了手动操作一波样式：</p>
<figure data-type="image" tabindex="4"><img src="https://2293736867.github.io/post-images/1615872441886.png" alt="" loading="lazy"></figure>
<p>手动加了几个之后，发现手动太麻烦了，而且笔者记得<code>vim</code>是有让数字增大的快捷键的，就是<code>ctrl+x</code>，于是使用<code>q</code>做了一下按键的记录，啪的一声很快一百多个标签全部完成了：</p>
<figure data-type="image" tabindex="5"><img src="https://2293736867.github.io/post-images/1615872542019.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第274期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-274-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-274-qi/">
        </link>
        <updated>2021-03-15T04:20:07.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>为什么总是天妒英才呢？因为没人管笨蛋活多久。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>春风倚棹阖闾城，水国春寒阴复晴。<br>
——刘长卿《别严士元》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我和你，可以做朋友吗？</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第273期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-273-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-273-qi/">
        </link>
        <updated>2021-03-14T04:17:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>吃完苦中苦，我终于成为了人下人。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>试衫著暖气，开镜觅春晖。<br>
——张若虚《代答闺梦还》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>我没有任何理由为了那些人让自己的人生付之一炬！</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第272期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-272-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-272-qi/">
        </link>
        <updated>2021-03-13T04:15:05.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>不要以为世界抛弃了你，世界根本没空搭理你。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>淡荡春光寒食天，玉炉沉水袅残烟。<br>
——李清照《浣溪沙·淡荡春光寒食天》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>你们认为没有路，是因为没有学会不择手段。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第271期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-271-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-271-qi/">
        </link>
        <updated>2021-03-12T04:10:41.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>只要选对了人生的方向，很容易就成功了，让我们恭喜只要和很容易。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>桃花尽日随流水，洞在清溪何处边。<br>
——张旭《桃花溪》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>就算没有意义，偶尔也会有好事发生。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第270期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-270-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-270-qi/">
        </link>
        <updated>2021-03-11T04:08:52.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>做好人没希望，做坏人不擅长。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>人间四月芳菲尽，山寺桃花始盛开。<br>
——白居易《大林寺桃花》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>越是锐利的小刀切完东西后就越容易变钝。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第269期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-269-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-269-qi/">
        </link>
        <updated>2021-03-10T04:05:18.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>绝望不在某时某刻，而在此时此刻。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>几日不来春便老，开尽桃花。<br>
——吴琚《浪淘沙·岸柳可藏鸦》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>这个世界啊，很美丽的，很广大的，很辽阔的！</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[每日分享 第268期]]></title>
        <id>https://2293736867.github.io/post/mei-ri-fen-xiang-di-268-qi/</id>
        <link href="https://2293736867.github.io/post/mei-ri-fen-xiang-di-268-qi/">
        </link>
        <updated>2021-03-09T04:02:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="每日鸡汤">每日鸡汤</h1>
<blockquote>
<p>不要埋怨现在的经历惨淡，跟未来比，还差的远呢。</p>
</blockquote>
<h1 id="每日诗词">每日诗词</h1>
<blockquote>
<p>城中桃李愁风雨，春在溪头荠菜花。<br>
——辛弃疾《鹧鸪天·陌上柔桑破嫩芽》</p>
</blockquote>
<h1 id="每日一句">每日一句</h1>
<blockquote>
<p>目的虽有，却无路可循；我们称之为路的，无非是踌躇。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[软件测试笔记（一）：软件测试概论]]></title>
        <id>https://2293736867.github.io/post/ruan-jian-ce-shi-bi-ji-yi-ruan-jian-ce-shi-gai-lun/</id>
        <link href="https://2293736867.github.io/post/ruan-jian-ce-shi-bi-ji-yi-ruan-jian-ce-shi-gai-lun/">
        </link>
        <updated>2021-03-08T06:58:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-软件测试目的">1 软件测试目的</h1>
<p>测试的目的就是以最少的时间和人力找出软件中潜在的各种错误和缺陷，证明软件的功能和性能与需求说明相符，<code>Glenford J.Myers</code>曾提出以下观点：</p>
<ul>
<li>测试是为了证明程序有错，而不是证明程序无错误</li>
<li>一个好的测试用例能发现至今未发现的错误</li>
<li>一个成功的测试是发现了至今未发现的错误</li>
</ul>
<p>软件测试的目的往往包含以下内容：</p>
<ul>
<li>测试并不仅仅是为了找出错误，通过分析错误产生的原因和错误的发生趋势，可以帮助项目管理者发现当前软件开发过程中的缺陷，以便及时改进</li>
<li>测试帮助测试人员设计有针对性的测试方法，改善测试的效率和有效性</li>
<li>没有发现错误的测试也是有价值的，完整的测试是评定软件质量的一种方法</li>
</ul>
<h1 id="2-软件测试的原则">2 软件测试的原则</h1>
<ul>
<li>软件测试是证伪而非证真</li>
<li>尽早地和不断地进行软件测试</li>
<li>重视无效数据和非预期的测试</li>
<li>应当对每一个测试结果做全面检查</li>
<li>测试现场保护和资料归档</li>
<li>程序员应避免检查自己的程序</li>
<li>充分注意测试中的群集现象</li>
<li>用例要定期评审</li>
</ul>
<h1 id="3-软件测试分类">3 软件测试分类</h1>
<h2 id="31-按测试阶段划分">3.1 按测试阶段划分</h2>
<p>可以分为：</p>
<ul>
<li>单元测试：用于检验被测代码的一个很小的、明确的功能是否正确</li>
<li>集成测试：对经过单元测试的模块之间的依赖接口的关系图进行测试</li>
<li>确认测试：用于验证软件的有效性</li>
<li>系统测试：将整个软件系统与计算机硬件、外设、支持软件、数据、人员等其他系统元素结合起来进行测试</li>
<li>验收测试：最终用户参与测试的过程</li>
</ul>
<h2 id="32-按执行状态划分">3.2 按执行状态划分</h2>
<p>可以分为：</p>
<ul>
<li>动态测试：运行被测程序，检查运行结果与预期结果的差异，并分析运行效率和健壮性等性能，由“构造测试实例、执行程序和分析程序的输出结果”组成</li>
<li>静态测试：对被测程序进行特性分析方法的总成，是指计算机不运行被测试的程序，而对程序和文档进行分析和检查，包括走查、符号执行、需求确认等</li>
</ul>
<h2 id="33-按照测试技术划分">3.3 按照测试技术划分</h2>
<p>可以分为：</p>
<ul>
<li>黑盒测试：也叫功能测试或数据驱动测试，测试时把程序看做不能打开的黑盒，完全不考虑程序内部结构和特性，对程序接口测试，检查程序功能是否按照需求规格说明书的规定正常使用，程序是否能适当地接收输入数据而产生正确的输出信息，并且保持外部信息的完整性</li>
<li>白盒测试：又叫结构测试或逻辑驱动测试，用于检测产品内部的结构及检验程序中的每条通路能够按照预定要求正确工作</li>
<li>灰盒测试：介于白盒与黑盒测试之间，主要用于测试各个组件之间的逻辑关系是否正确，采用桩驱动把各个函数按照一定的逻辑串起来，达到在产品还没有界面的情况下的结果输出</li>
</ul>
<p>一般来说，单元测试采用白盒测试的方法，集成测试采用灰盒测试的方法，而系统测试和确认测试采用黑盒测试的方法，黑盒测试与白盒测试比较如下：</p>
<ul>
<li>规划方面：黑盒测试用于功能测试，而白盒测试用于结构测试</li>
<li>性质：黑盒测试是一种确认（<code>Validation</code>）技术，而白盒测试是一种验证（<code>Verification</code>）技术</li>
<li>优点：黑盒测试的优点包括从用户的角度出发、适用于各阶段测试、从产品功能角度测试、容易入手生成测试数据，而白盒测试的优点包括针对程序内部特定部分进行覆盖测试、可构成测试数据使特定程序部分得到测试、有一定充分性的度量手段、可获得较多工具的支持</li>
<li>缺点：黑盒测试的缺点包括无法测试程序内部特定部分、某些代码得不到测试、如果规格说明错误则无法发现、不易进行充分性的测试，白盒测试的缺点包括无法测试程序外部特性、通常不易生成测试数据、无法对未实现规格说明的部分进行测试、工作量大通常只用于单元测试</li>
<li>应用范围：黑盒测试的应用范围包括边界分析法、等价类划分法、决策表测试，白盒测试的应用范围包括：语句覆盖、判定覆盖、条件覆盖、路径覆盖等</li>
</ul>
<h2 id="34-按执行主体划分">3.4 按执行主体划分</h2>
<p>可以分为：</p>
<ul>
<li><code>Alpha</code>测试：也叫验收测试或开发方测试，开发者和用户共同去检测与证实软件的实现是否满足软件设计说明或软件需求规格说明的要求</li>
<li><code>Beta</code>测试：通常被认为是用户测试，通过用户大量使用来评价检查软件</li>
<li>第三方测试：也叫独立测试，由第三方机构来进行的测试</li>
</ul>
<h1 id="4-软件测试模型">4 软件测试模型</h1>
<p>软件测试模型用于指导软件测试的实践，常见的有：</p>
<ul>
<li><code>V模型</code></li>
<li><code>W模型</code></li>
<li><code>H模型</code></li>
<li><code>X模型</code></li>
<li><code>前置模型</code></li>
</ul>
<h2 id="41-v模型">4.1 <code>V模型</code></h2>
<p><code>V模型</code>反映了测试活动与开发活动间的关系，标明测试过程中存在的不同级别，并清楚描述测试的各个阶段和开发过程的各个阶段对应关系。</p>
<ul>
<li>左侧是开发阶段：从定义软件需求开始，把需求转换为概要设计和详细设计，最后形成程序代码</li>
<li>右侧是测试阶段：在代码编写完成后，从单元测试开始，依次进行集成测试、系统测试和客户验收测试</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://img-blog.csdnimg.cn/20210308093643375.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h2 id="42-w模型">4.2 <code>W模型</code></h2>
<p><code>W模型</code>相比起<code>V模型</code>，增加了软件各开发阶段中应同步进行的验证和确认活动。<code>W模型</code>强调：</p>
<ul>
<li>测试伴随整个软件周期</li>
<li>测试对象不仅是程序，需求、设计也要测试</li>
<li>测试与开发同步进行</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://img-blog.csdnimg.cn/20210308095334139.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h2 id="43-h模型">4.3 <code>H模型</code></h2>
<p><code>H模型</code>将测试活动完全独立出来，使得测试准备活动和测试执行活动清晰地体现出来，从而使得测试准备与测试执行分离，有利于资源调配，减低成本，提高效率。</p>
<figure data-type="image" tabindex="3"><img src="https://img-blog.csdnimg.cn/2021030810021469.png" alt="在这里插入图片描述" loading="lazy"></figure>
<h2 id="44-x模型">4.4 <code>X模型</code></h2>
<figure data-type="image" tabindex="4"><img src="https://img-blog.csdnimg.cn/20210308110543771.png" alt="在这里插入图片描述" loading="lazy"></figure>
<ul>
<li>左边：描述的是针对单独程序片段进行的编码测试，此后将进行频繁的交接，通过集成最终成为可执行程序</li>
<li>右边：上方定位了已通过集成测试的成品进行封板并提交给用户，也可作为更大规模和范围内集成的一部分，下方定位了探索性测试</li>
</ul>
<h2 id="45-前置模型">4.5 前置模型</h2>
<p>前置模型将测试和开发紧密结合，优点如下：</p>
<ul>
<li>开发和测试相结合</li>
<li>对每一个交付内容进行测试</li>
<li>让验收测试和技术测试保持相互独立</li>
<li>反复交替的开发和测试</li>
<li>引入新的测试理念</li>
</ul>
<h2 id="46-测试模型各自特点">4.6 测试模型各自特点</h2>
<ul>
<li><code>V模型</code>：强调了整个软件项目开发中需要经历的若干个测试级别，每个级别都与一个开发阶段相对应，但它没有明确指出应该对需求、设计进行测试</li>
<li><code>W模型</code>：对<code>V模型</code>进行了补充，强调了测试计划等工作的先行和堆系统需求和软件设计的测试，但和<code>V模型</code>一样，没有专门针对软件测试的流程予以说明</li>
<li><code>H模型</code>：表现了测试是独立的，就每一个软件的测试细节来说，都有一个独立的操作流程，只要测试前提具备了，就可以开始进行测试</li>
<li><code>X模型</code>：体现出测试设计、测试回溯的过程，帮助有经验的测试人员在测试计划之外发现软件错误</li>
<li><code>前置模型</code>：前置模型将测试和开发紧密结合，反复交替第执行</li>
</ul>
<h1 id="5-测试用例">5 测试用例</h1>
<h2 id="51-定义">5.1 定义</h2>
<p>测试用例是指对一项特定的软件产品进行测试任务的描述，体现测试方案、方法、技术和策略，内容包括：</p>
<ul>
<li>测试目标</li>
<li>测试环境</li>
<li>输入数据</li>
<li>预期结果</li>
<li>测试脚本</li>
</ul>
<p>等，最终形成文档。</p>
<p>一个测试用例具有以下属性：</p>
<ul>
<li>优先级次序</li>
<li>目标性</li>
<li>所属的范围</li>
<li>阶段性</li>
<li>状态性</li>
<li>时效性</li>
<li>所有者、日期等特性</li>
</ul>
<h2 id="52-测试用例的设计方法">5.2 测试用例的设计方法</h2>
<p>分为有白盒和黑盒测试相对应的设计方法，比如，黑盒测试的用例设计可以采用：</p>
<ul>
<li>等价类划分</li>
<li>因果图法</li>
<li>边值分析</li>
<li>用户界面测试</li>
<li>配置测试</li>
<li>安装选项验证</li>
</ul>
<p>等，而白盒测试用例的设计方法如下：</p>
<ul>
<li>采用逻辑覆盖等结构的测试用例设计方法</li>
<li>基于程序结构的域测试用例设计方法</li>
<li>根据对象状态或等待状态变化来设计测试用例</li>
<li>基于程序错误的变异来设计测试用例</li>
<li>基于代数运算符号测试的测试用例设计方法</li>
</ul>
<h2 id="53-测试用例设计误区">5.3 测试用例设计误区</h2>
<ul>
<li>把测试用例设计等同于测试输入数据的设计：测试用例中输入数据的确定只是测试用例设计的一个子集，测试用例设计还包括如何根据测试需求、设计规格说明书等文档设计用例的执行策略、执行步骤、预期结构、组织管理形式等问题</li>
<li>测试用例设计得越详细越好：编写过于详细的测试用例会耗费大量的资源，必须分析被测试软件的特征，运用有效的测试用例设计手段，尽量使用较少的测试用例，同时满足合理的测试覆盖</li>
<li>追求测试用例设计“一步到位”：任何软件项目的开发过程都处于不断变化的过程中，在测试过程中可能发现设计测试用例时考虑不周的地方，需要完善，也有可能用户对软件功能提出新的需求变更，需要根据软件变化对测试用例进行调整</li>
<li>将多个测试用例混在一个用例中：一个测试用例包含许多内容很容易引起混淆，从而使得测试结果很难记录</li>
</ul>
]]></content>
    </entry>
</feed>